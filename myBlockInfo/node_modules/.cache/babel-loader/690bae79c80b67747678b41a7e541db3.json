{"ast":null,"code":"var _jsxFileName = \"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/src/App.js\";\nimport React, { createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\nimport BlockNumber from './BlockNumber'; //import Metadata from './Metadata'\n\nimport NodeInfo from './NodeInfo';\nimport BlockInfo from './BlockInfo';\nexport const Main = () => {\n  const {\n    apiState,\n    keyringState,\n    apiError\n  } = useSubstrate();\n\n  const loader = text => /*#__PURE__*/React.createElement(Dimmer, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, text));\n\n  const message = err => /*#__PURE__*/React.createElement(Grid, {\n    centered: true,\n    columns: 2,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    compact: true,\n    floating: true,\n    header: \"Error Connecting to Substrate\",\n    content: `${err}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n\n  if (apiState === 'ERROR') return message(apiError);else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader(\"Loading accounts (please review any extension's authorization)\");\n  }\n\n  const contextRef = createRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: contextRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    stackable: true,\n    columns: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BlockInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NodeInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlockNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BlockNumber, {\n    finalized: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DeveloperConsole, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\nexport const App = () => {\n  return /*#__PURE__*/React.createElement(SubstrateContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\nexport default App;","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/src/App.js"],"names":["React","createRef","Container","Dimmer","Loader","Grid","Message","SubstrateContextProvider","useSubstrate","DeveloperConsole","BlockNumber","NodeInfo","BlockInfo","Main","apiState","keyringState","apiError","loader","text","message","err","contextRef","App"],"mappings":"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","sourcesContent":["import React, { createRef } from 'react'\nimport { Container, Dimmer, Loader, Grid, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib'\nimport { DeveloperConsole } from './substrate-lib/components'\nimport BlockNumber from './BlockNumber'\n//import Metadata from './Metadata'\nimport NodeInfo from './NodeInfo'\nimport BlockInfo from './BlockInfo'\n\nexport const Main = () => {\n  const { apiState, keyringState, apiError } = useSubstrate()\n\n  const loader = (text) => (\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>\n  )\n\n  const message = (err) => (\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message\n          negative\n          compact\n          floating\n          header='Error Connecting to Substrate'\n          content={`${err}`}\n        />\n      </Grid.Column>\n    </Grid>\n  )\n\n  if (apiState === 'ERROR') return message(apiError)\n  else if (apiState !== 'READY') return loader('Connecting to Substrate')\n\n  if (keyringState !== 'READY') {\n    return loader(\n      \"Loading accounts (please review any extension's authorization)\"\n    )\n  }\n\n  const contextRef = createRef()\n\n  return (\n    <div ref={contextRef}>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <BlockInfo />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  )\n}\n\nexport const App = () => {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}