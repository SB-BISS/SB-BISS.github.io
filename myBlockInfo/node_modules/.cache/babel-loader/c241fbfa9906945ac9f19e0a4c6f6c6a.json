{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _assert = _interopRequireDefault(require(\"../assert\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-extend-native */\n\n\nfunction getOffset(value, length) {\n  return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n}\n\nif (!Array.prototype.fill) {\n  // eslint-disable-next-line no-extend-native\n  Array.prototype.fill = function fill(value, start = 0, end) {\n    (0, _assert.default)(this, 'this is null or not defined');\n    const A = Object(this);\n    const relativeEnd = end !== null && end !== void 0 ? end : A.length;\n    const final = getOffset(relativeEnd, A.length);\n    let k = getOffset(start, A.length);\n\n    while (k < final) {\n      A[k] = value;\n      k++;\n    }\n\n    return A;\n  };\n}\n\nif (!Uint8Array.prototype.fill) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  Uint8Array.prototype.fill = Array.prototype.fill;\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/util/polyfill/fill.js"],"names":["_interopRequireDefault","require","_assert","getOffset","value","length","Math","max","min","Array","prototype","fill","start","end","default","A","Object","relativeEnd","final","k","Uint8Array"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAApC,C,CAEA;AACA;;AAEA;;;AACA,SAASE,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,SAAOD,KAAK,GAAG,CAAR,GAAYE,IAAI,CAACC,GAAL,CAASF,MAAM,GAAGD,KAAlB,EAAyB,CAAzB,CAAZ,GAA0CE,IAAI,CAACE,GAAL,CAASJ,KAAT,EAAgBC,MAAhB,CAAjD;AACD;;AAED,IAAI,CAACI,KAAK,CAACC,SAAN,CAAgBC,IAArB,EAA2B;AACzB;AACAF,EAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuB,SAASA,IAAT,CAAcP,KAAd,EAAqBQ,KAAK,GAAG,CAA7B,EAAgCC,GAAhC,EAAqC;AAC1D,KAAC,GAAGX,OAAO,CAACY,OAAZ,EAAqB,IAArB,EAA2B,6BAA3B;AACA,UAAMC,CAAC,GAAGC,MAAM,CAAC,IAAD,CAAhB;AACA,UAAMC,WAAW,GAAGJ,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiCA,GAAjC,GAAuCE,CAAC,CAACV,MAA7D;AACA,UAAMa,KAAK,GAAGf,SAAS,CAACc,WAAD,EAAcF,CAAC,CAACV,MAAhB,CAAvB;AACA,QAAIc,CAAC,GAAGhB,SAAS,CAACS,KAAD,EAAQG,CAAC,CAACV,MAAV,CAAjB;;AAEA,WAAOc,CAAC,GAAGD,KAAX,EAAkB;AAChBH,MAAAA,CAAC,CAACI,CAAD,CAAD,GAAOf,KAAP;AACAe,MAAAA,CAAC;AACF;;AAED,WAAOJ,CAAP;AACD,GAbD;AAcD;;AAED,IAAI,CAACK,UAAU,CAACV,SAAX,CAAqBC,IAA1B,EAAgC;AAC9B;AACA;AACAS,EAAAA,UAAU,CAACV,SAAX,CAAqBC,IAArB,GAA4BF,KAAK,CAACC,SAAN,CAAgBC,IAA5C;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _assert = _interopRequireDefault(require(\"../assert\"));\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable no-extend-native */\nfunction getOffset(value, length) {\n  return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n}\n\nif (!Array.prototype.fill) {\n  // eslint-disable-next-line no-extend-native\n  Array.prototype.fill = function fill(value, start = 0, end) {\n    (0, _assert.default)(this, 'this is null or not defined');\n    const A = Object(this);\n    const relativeEnd = end !== null && end !== void 0 ? end : A.length;\n    const final = getOffset(relativeEnd, A.length);\n    let k = getOffset(start, A.length);\n\n    while (k < final) {\n      A[k] = value;\n      k++;\n    }\n\n    return A;\n  };\n}\n\nif (!Uint8Array.prototype.fill) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  Uint8Array.prototype.fill = Array.prototype.fill;\n}"]},"metadata":{},"sourceType":"script"}