{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.format = format;\nexports.default = logger;\n\nvar _formatDate = _interopRequireDefault(require(\"./format/formatDate\"));\n\nvar _bn = _interopRequireDefault(require(\"./is/bn\"));\n\nvar _function = _interopRequireDefault(require(\"./is/function\"));\n\nvar _object = _interopRequireDefault(require(\"./is/object\"));\n\nvar _u8a = _interopRequireDefault(require(\"./is/u8a\"));\n\nvar _toHex = _interopRequireDefault(require(\"./u8a/toHex\"));\n\nvar _toU8a = _interopRequireDefault(require(\"./u8a/toU8a\"));\n\nvar _is = require(\"./is\"); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst logTo = {\n  debug: 'log',\n  error: 'error',\n  log: 'log',\n  warn: 'warn'\n};\n\nfunction formatOther(value) {\n  if (value && (0, _object.default)(value) && value.constructor === Object) {\n    return Object.keys(value).reduce((result, key) => {\n      result[key] = format(value[key]);\n      return result;\n    }, {});\n  }\n\n  return value;\n}\n\nfunction format(value) {\n  if (Array.isArray(value)) {\n    return value.map(format);\n  } else if ((0, _bn.default)(value)) {\n    return value.toString();\n  } else if ((0, _u8a.default)(value) || (0, _is.isBuffer)(value)) {\n    return (0, _toHex.default)((0, _toU8a.default)(value));\n  }\n\n  return formatOther(value);\n}\n\nfunction apply(log, type, values) {\n  if (values.length === 1 && (0, _function.default)(values[0])) {\n    const fnResult = values[0]();\n    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult]);\n  }\n\n  console[logTo[log]]((0, _formatDate.default)(new Date()), type, ...values.map(format));\n}\n\nfunction noop() {// noop\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * const l from '@polkadot/util/logger')('test');\n *\n * l.log('blah'); // <date>     TEST: blah\n * ```\n */\n\n\nfunction logger(_type) {\n  const type = `${_type.toUpperCase()}:`.padStart(16);\n  let isDebug;\n\n  try {\n    const isTest = process.env.NODE_ENV === 'test';\n    const debugList = (process.env.DEBUG || '').split(',');\n    isDebug = isTest || !!debugList.find(entry => _type.startsWith(entry));\n  } catch (error) {\n    isDebug = false;\n  }\n\n  return {\n    debug: isDebug ? (...values) => apply('debug', type, values) : noop,\n    error: (...values) => apply('error', type, values),\n    log: (...values) => apply('log', type, values),\n    noop,\n    warn: (...values) => apply('warn', type, values)\n  };\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api/node_modules/@polkadot/util/logger.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","format","default","logger","_formatDate","_bn","_function","_object","_u8a","_toHex","_toU8a","_is","logTo","debug","error","log","warn","formatOther","constructor","keys","reduce","result","key","Array","isArray","map","toString","isBuffer","apply","type","values","length","fnResult","console","Date","noop","_type","toUpperCase","padStart","isDebug","isTest","process","env","NODE_ENV","debugList","DEBUG","split","find","entry","startsWith"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.format = format;\nexports.default = logger;\n\nvar _formatDate = _interopRequireDefault(require(\"./format/formatDate\"));\n\nvar _bn = _interopRequireDefault(require(\"./is/bn\"));\n\nvar _function = _interopRequireDefault(require(\"./is/function\"));\n\nvar _object = _interopRequireDefault(require(\"./is/object\"));\n\nvar _u8a = _interopRequireDefault(require(\"./is/u8a\"));\n\nvar _toHex = _interopRequireDefault(require(\"./u8a/toHex\"));\n\nvar _toU8a = _interopRequireDefault(require(\"./u8a/toU8a\"));\n\nvar _is = require(\"./is\");\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst logTo = {\n  debug: 'log',\n  error: 'error',\n  log: 'log',\n  warn: 'warn'\n};\n\nfunction formatOther(value) {\n  if (value && (0, _object.default)(value) && value.constructor === Object) {\n    return Object.keys(value).reduce((result, key) => {\n      result[key] = format(value[key]);\n      return result;\n    }, {});\n  }\n\n  return value;\n}\n\nfunction format(value) {\n  if (Array.isArray(value)) {\n    return value.map(format);\n  } else if ((0, _bn.default)(value)) {\n    return value.toString();\n  } else if ((0, _u8a.default)(value) || (0, _is.isBuffer)(value)) {\n    return (0, _toHex.default)((0, _toU8a.default)(value));\n  }\n\n  return formatOther(value);\n}\n\nfunction apply(log, type, values) {\n  if (values.length === 1 && (0, _function.default)(values[0])) {\n    const fnResult = values[0]();\n    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult]);\n  }\n\n  console[logTo[log]]((0, _formatDate.default)(new Date()), type, ...values.map(format));\n}\n\nfunction noop() {// noop\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * const l from '@polkadot/util/logger')('test');\n *\n * l.log('blah'); // <date>     TEST: blah\n * ```\n */\n\n\nfunction logger(_type) {\n  const type = `${_type.toUpperCase()}:`.padStart(16);\n  let isDebug;\n\n  try {\n    const isTest = process.env.NODE_ENV === 'test';\n    const debugList = (process.env.DEBUG || '').split(',');\n    isDebug = isTest || !!debugList.find(entry => _type.startsWith(entry));\n  } catch (error) {\n    isDebug = false;\n  }\n\n  return {\n    debug: isDebug ? (...values) => apply('debug', type, values) : noop,\n    error: (...values) => apply('error', type, values),\n    log: (...values) => apply('log', type, values),\n    noop,\n    warn: (...values) => apply('warn', type, values)\n  };\n}"]},"metadata":{},"sourceType":"script"}