{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._stakerRewardsEras = _stakerRewardsEras;\nexports._stakerRewards = _stakerRewards;\nexports.stakerRewards = stakerRewards;\nexports.stakerRewardsMultiEras = stakerRewardsMultiEras;\nexports.stakerRewardsMulti = stakerRewardsMulti;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ZERO = new _bn.default(0);\nvar MIN_ONE = new _bn.default(-1);\nvar COMM_DIV = new _bn.default(1000000000);\nvar MAX_ERAS = new _bn.default(1000000000);\n\nfunction parseRewards(api, stashId, _ref, exposures) {\n  var _ref2 = _slicedToArray(_ref, 4),\n      erasPoints = _ref2[1],\n      erasPrefs = _ref2[2],\n      erasRewards = _ref2[3];\n\n  return exposures.map(function (_ref3) {\n    var era = _ref3.era,\n        isEmpty = _ref3.isEmpty,\n        isValidator = _ref3.isValidator,\n        nominating = _ref3.nominating,\n        eraValidators = _ref3.validators;\n\n    var _ref4 = erasPoints.find(function (p) {\n      return p.era.eq(era);\n    }) || {\n      eraPoints: ZERO,\n      validators: {}\n    },\n        eraPoints = _ref4.eraPoints,\n        allValPoints = _ref4.validators;\n\n    var _ref5 = erasRewards.find(function (r) {\n      return r.era.eq(era);\n    }) || {\n      eraReward: api.registry.createType('Balance')\n    },\n        eraReward = _ref5.eraReward;\n\n    var _ref6 = erasPrefs.find(function (p) {\n      return p.era.eq(era);\n    }) || {\n      validators: {}\n    },\n        allValPrefs = _ref6.validators;\n\n    var validators = {};\n    var stakerId = stashId.toString();\n    Object.entries(eraValidators).forEach(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n          validatorId = _ref8[0],\n          exposure = _ref8[1];\n\n      var _allValPrefs$validato;\n\n      var valPoints = allValPoints[validatorId] || ZERO;\n      var valComm = ((_allValPrefs$validato = allValPrefs[validatorId]) === null || _allValPrefs$validato === void 0 ? void 0 : _allValPrefs$validato.commission.unwrap()) || ZERO;\n      var expTotal = exposure.total.unwrap();\n      var avail = ZERO;\n      var value;\n\n      if (!(expTotal.isZero() || valPoints.isZero() || eraPoints.isZero())) {\n        avail = eraReward.mul(valPoints).div(eraPoints);\n        var valCut = valComm.mul(avail).div(COMM_DIV);\n        var staked;\n\n        if (validatorId === stakerId) {\n          staked = exposure.own.unwrap();\n        } else {\n          var stakerExp = exposure.others.find(function (_ref9) {\n            var who = _ref9.who;\n            return who.eq(stakerId);\n          });\n          staked = stakerExp ? stakerExp.value.unwrap() : ZERO;\n        }\n\n        value = avail.sub(valCut).imul(staked).div(expTotal).iadd(validatorId === stakerId ? valCut : ZERO);\n      }\n\n      validators[validatorId] = {\n        total: api.registry.createType('Balance', avail),\n        value: api.registry.createType('Balance', value)\n      };\n    });\n    return {\n      era: era,\n      eraReward: eraReward,\n      isEmpty: isEmpty,\n      isValidator: isValidator,\n      nominating: nominating,\n      validators: validators\n    };\n  });\n}\n\nfunction uniqValidators(rewards) {\n  var uniq = [];\n  rewards.forEach(function (_ref10) {\n    var validators = _ref10.validators;\n    Object.keys(validators).forEach(function (validatorId) {\n      if (!uniq.includes(validatorId)) {\n        uniq.push(validatorId);\n      }\n    });\n  });\n  return uniq;\n}\n\nfunction isOldLedger(ledger) {\n  return !!(ledger === null || ledger === void 0 ? void 0 : ledger.lastReward);\n}\n\nfunction filterEra(era, stakingLedger) {\n  return isOldLedger(stakingLedger) ? era.gt(stakingLedger.lastReward.unwrapOr(MIN_ONE)) : !stakingLedger.claimedRewards.some(function (e) {\n    return e.eq(era);\n  });\n}\n\nfunction filterEras(eras, stakingLedger) {\n  return eras.filter(function (era) {\n    return filterEra(era, stakingLedger);\n  });\n}\n\nfunction removeClaimed(validators, queryValidators, reward) {\n  var rm = [];\n  Object.keys(reward.validators).forEach(function (validatorId) {\n    var index = validators.indexOf(validatorId);\n\n    if (index !== -1) {\n      var valLedger = queryValidators[index].stakingLedger;\n\n      if (valLedger === null || valLedger === void 0 ? void 0 : valLedger.claimedRewards.some(function (era) {\n        return reward.era.eq(era);\n      })) {\n        rm.push(validatorId);\n      }\n    }\n  });\n  rm.forEach(function (validatorId) {\n    delete reward.validators[validatorId];\n  });\n}\n\nfunction filterRewards(api, eras, _ref11) {\n  var migrateEra = _ref11.migrateEra,\n      rewards = _ref11.rewards,\n      stakingLedger = _ref11.stakingLedger;\n  var validators = uniqValidators(rewards);\n  var filter = filterEras(eras, stakingLedger);\n  return ((0, _util.isFunction)(api.tx.staking.payoutStakers) ? api.derive.staking.queryMulti(validators) : (0, _rxjs.of)([])).pipe((0, _operators.map)(function (queryValidators) {\n    return rewards.filter(function (_ref12) {\n      var isEmpty = _ref12.isEmpty;\n      return !isEmpty;\n    }).filter(function (reward) {\n      if (!filter.some(function (filter) {\n        return reward.era.eq(filter);\n      })) {\n        return false;\n      } else if (reward.era.lt(migrateEra)) {\n        // we filter again here, the actual ledger may have changed, e.g. something has been claimed\n        return filterEra(reward.era, stakingLedger);\n      }\n\n      reward.isStakerPayout = true;\n      removeClaimed(validators, queryValidators, reward);\n      return true;\n    }).filter(function (_ref13) {\n      var validators = _ref13.validators;\n      return Object.keys(validators).length !== 0;\n    }).map(function (reward) {\n      return _objectSpread(_objectSpread({}, reward), {}, {\n        nominators: reward.nominating.filter(function (n) {\n          return !!reward.validators[n.validatorId];\n        })\n      });\n    });\n  }));\n}\n\nfunction _stakerRewardsEras(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function (eras, withActive) {\n    return (0, _rxjs.combineLatest)([(0, _util.isFunction)(api.query.staking.migrateEra) ? api.query.staking.migrateEra() : (0, _rxjs.of)({\n      unwrapOr: function unwrapOr() {\n        return (0, _util.isFunction)(api.tx.staking.payoutStakers) ? ZERO : MAX_ERAS;\n      }\n    }), api.derive.staking._erasPoints(eras, withActive), api.derive.staking._erasPrefs(eras, withActive), api.derive.staking._erasRewards(eras, withActive)]);\n  });\n}\n\nfunction _stakerRewards(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function (accountId, eras, withActive) {\n    return (0, _rxjs.combineLatest)([api.derive.staking.query(accountId), api.derive.staking._stakerExposure(accountId, eras, withActive), api.derive.staking._stakerRewardsEras(eras, withActive)]).pipe((0, _operators.switchMap)(function (_ref14) {\n      var _ref15 = _slicedToArray(_ref14, 3),\n          _ref15$ = _ref15[0],\n          stakingLedger = _ref15$.stakingLedger,\n          stashId = _ref15$.stashId,\n          exposures = _ref15[1],\n          erasResult = _ref15[2];\n\n      if (!stashId || !stakingLedger) {\n        return (0, _rxjs.of)([]);\n      }\n\n      var rewards = parseRewards(api, stashId, erasResult, exposures);\n      return withActive ? (0, _rxjs.of)(rewards) : filterRewards(api, eras, {\n        migrateEra: erasResult[0].unwrapOr(ZERO),\n        rewards: rewards,\n        stakingLedger: stakingLedger\n      });\n    }));\n  });\n}\n\nfunction stakerRewards(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function (accountId) {\n    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(function (eras) {\n      return api.derive.staking._stakerRewards(accountId, eras, withActive);\n    }));\n  });\n}\n\nfunction stakerRewardsMultiEras(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function (accountIds, eras) {\n    return accountIds.length && eras.length ? (0, _rxjs.combineLatest)(accountIds.map(function (acc) {\n      return api.derive.staking._stakerRewards(acc, eras, false);\n    })) : (0, _rxjs.of)([]);\n  });\n}\n\nfunction stakerRewardsMulti(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function (accountIds) {\n    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(function (eras) {\n      return api.derive.staking.stakerRewardsMultiEras(accountIds, eras);\n    }));\n  });\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api-derive/staking/stakerRewards.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_stakerRewardsEras","_stakerRewards","stakerRewards","stakerRewardsMultiEras","stakerRewardsMulti","_defineProperty2","_bn","_rxjs","_operators","_util","_util2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","ZERO","MIN_ONE","COMM_DIV","MAX_ERAS","parseRewards","api","stashId","exposures","erasPoints","erasPrefs","erasRewards","map","era","isEmpty","isValidator","nominating","eraValidators","validators","find","p","eq","eraPoints","allValPoints","r","eraReward","registry","createType","allValPrefs","stakerId","toString","entries","validatorId","exposure","_allValPrefs$validato","valPoints","valComm","commission","unwrap","expTotal","total","avail","isZero","mul","div","valCut","staked","own","stakerExp","others","who","sub","imul","iadd","uniqValidators","rewards","uniq","includes","isOldLedger","ledger","lastReward","filterEra","stakingLedger","gt","unwrapOr","claimedRewards","some","e","filterEras","eras","removeClaimed","queryValidators","reward","rm","index","indexOf","valLedger","filterRewards","migrateEra","isFunction","tx","staking","payoutStakers","derive","queryMulti","of","pipe","lt","isStakerPayout","nominators","n","instanceId","memo","withActive","combineLatest","query","_erasPoints","_erasPrefs","_erasRewards","accountId","_stakerExposure","switchMap","erasResult","erasHistoric","accountIds","acc"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._stakerRewardsEras = _stakerRewardsEras;\nexports._stakerRewards = _stakerRewards;\nexports.stakerRewards = stakerRewards;\nexports.stakerRewardsMultiEras = stakerRewardsMultiEras;\nexports.stakerRewardsMulti = stakerRewardsMulti;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ZERO = new _bn.default(0);\nconst MIN_ONE = new _bn.default(-1);\nconst COMM_DIV = new _bn.default(1000000000);\nconst MAX_ERAS = new _bn.default(1000000000);\n\nfunction parseRewards(api, stashId, [, erasPoints, erasPrefs, erasRewards], exposures) {\n  return exposures.map(({\n    era,\n    isEmpty,\n    isValidator,\n    nominating,\n    validators: eraValidators\n  }) => {\n    const {\n      eraPoints,\n      validators: allValPoints\n    } = erasPoints.find(p => p.era.eq(era)) || {\n      eraPoints: ZERO,\n      validators: {}\n    };\n    const {\n      eraReward\n    } = erasRewards.find(r => r.era.eq(era)) || {\n      eraReward: api.registry.createType('Balance')\n    };\n    const {\n      validators: allValPrefs\n    } = erasPrefs.find(p => p.era.eq(era)) || {\n      validators: {}\n    };\n    const validators = {};\n    const stakerId = stashId.toString();\n    Object.entries(eraValidators).forEach(([validatorId, exposure]) => {\n      var _allValPrefs$validato;\n\n      const valPoints = allValPoints[validatorId] || ZERO;\n      const valComm = ((_allValPrefs$validato = allValPrefs[validatorId]) === null || _allValPrefs$validato === void 0 ? void 0 : _allValPrefs$validato.commission.unwrap()) || ZERO;\n      const expTotal = exposure.total.unwrap();\n      let avail = ZERO;\n      let value;\n\n      if (!(expTotal.isZero() || valPoints.isZero() || eraPoints.isZero())) {\n        avail = eraReward.mul(valPoints).div(eraPoints);\n        const valCut = valComm.mul(avail).div(COMM_DIV);\n        let staked;\n\n        if (validatorId === stakerId) {\n          staked = exposure.own.unwrap();\n        } else {\n          const stakerExp = exposure.others.find(({\n            who\n          }) => who.eq(stakerId));\n          staked = stakerExp ? stakerExp.value.unwrap() : ZERO;\n        }\n\n        value = avail.sub(valCut).imul(staked).div(expTotal).iadd(validatorId === stakerId ? valCut : ZERO);\n      }\n\n      validators[validatorId] = {\n        total: api.registry.createType('Balance', avail),\n        value: api.registry.createType('Balance', value)\n      };\n    });\n    return {\n      era,\n      eraReward,\n      isEmpty,\n      isValidator,\n      nominating,\n      validators\n    };\n  });\n}\n\nfunction uniqValidators(rewards) {\n  const uniq = [];\n  rewards.forEach(({\n    validators\n  }) => {\n    Object.keys(validators).forEach(validatorId => {\n      if (!uniq.includes(validatorId)) {\n        uniq.push(validatorId);\n      }\n    });\n  });\n  return uniq;\n}\n\nfunction isOldLedger(ledger) {\n  return !!(ledger === null || ledger === void 0 ? void 0 : ledger.lastReward);\n}\n\nfunction filterEra(era, stakingLedger) {\n  return isOldLedger(stakingLedger) ? era.gt(stakingLedger.lastReward.unwrapOr(MIN_ONE)) : !stakingLedger.claimedRewards.some(e => e.eq(era));\n}\n\nfunction filterEras(eras, stakingLedger) {\n  return eras.filter(era => filterEra(era, stakingLedger));\n}\n\nfunction removeClaimed(validators, queryValidators, reward) {\n  const rm = [];\n  Object.keys(reward.validators).forEach(validatorId => {\n    const index = validators.indexOf(validatorId);\n\n    if (index !== -1) {\n      const valLedger = queryValidators[index].stakingLedger;\n\n      if (valLedger === null || valLedger === void 0 ? void 0 : valLedger.claimedRewards.some(era => reward.era.eq(era))) {\n        rm.push(validatorId);\n      }\n    }\n  });\n  rm.forEach(validatorId => {\n    delete reward.validators[validatorId];\n  });\n}\n\nfunction filterRewards(api, eras, {\n  migrateEra,\n  rewards,\n  stakingLedger\n}) {\n  const validators = uniqValidators(rewards);\n  const filter = filterEras(eras, stakingLedger);\n  return ((0, _util.isFunction)(api.tx.staking.payoutStakers) ? api.derive.staking.queryMulti(validators) : (0, _rxjs.of)([])).pipe((0, _operators.map)(queryValidators => rewards.filter(({\n    isEmpty\n  }) => !isEmpty).filter(reward => {\n    if (!filter.some(filter => reward.era.eq(filter))) {\n      return false;\n    } else if (reward.era.lt(migrateEra)) {\n      // we filter again here, the actual ledger may have changed, e.g. something has been claimed\n      return filterEra(reward.era, stakingLedger);\n    }\n\n    reward.isStakerPayout = true;\n    removeClaimed(validators, queryValidators, reward);\n    return true;\n  }).filter(({\n    validators\n  }) => Object.keys(validators).length !== 0).map(reward => _objectSpread(_objectSpread({}, reward), {}, {\n    nominators: reward.nominating.filter(n => !!reward.validators[n.validatorId])\n  }))));\n}\n\nfunction _stakerRewardsEras(instanceId, api) {\n  return (0, _util2.memo)(instanceId, (eras, withActive) => (0, _rxjs.combineLatest)([(0, _util.isFunction)(api.query.staking.migrateEra) ? api.query.staking.migrateEra() : (0, _rxjs.of)({\n    unwrapOr: () => (0, _util.isFunction)(api.tx.staking.payoutStakers) ? ZERO : MAX_ERAS\n  }), api.derive.staking._erasPoints(eras, withActive), api.derive.staking._erasPrefs(eras, withActive), api.derive.staking._erasRewards(eras, withActive)]));\n}\n\nfunction _stakerRewards(instanceId, api) {\n  return (0, _util2.memo)(instanceId, (accountId, eras, withActive) => (0, _rxjs.combineLatest)([api.derive.staking.query(accountId), api.derive.staking._stakerExposure(accountId, eras, withActive), api.derive.staking._stakerRewardsEras(eras, withActive)]).pipe((0, _operators.switchMap)(([{\n    stakingLedger,\n    stashId\n  }, exposures, erasResult]) => {\n    if (!stashId || !stakingLedger) {\n      return (0, _rxjs.of)([]);\n    }\n\n    const rewards = parseRewards(api, stashId, erasResult, exposures);\n    return withActive ? (0, _rxjs.of)(rewards) : filterRewards(api, eras, {\n      migrateEra: erasResult[0].unwrapOr(ZERO),\n      rewards,\n      stakingLedger\n    });\n  })));\n}\n\nfunction stakerRewards(instanceId, api) {\n  return (0, _util2.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._stakerRewards(accountId, eras, withActive))));\n}\n\nfunction stakerRewardsMultiEras(instanceId, api) {\n  return (0, _util2.memo)(instanceId, (accountIds, eras) => accountIds.length && eras.length ? (0, _rxjs.combineLatest)(accountIds.map(acc => api.derive.staking._stakerRewards(acc, eras, false))) : (0, _rxjs.of)([]));\n}\n\nfunction stakerRewardsMulti(instanceId, api) {\n  return (0, _util2.memo)(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking.stakerRewardsMultiEras(accountIds, eras))));\n}"]},"metadata":{},"sourceType":"script"}