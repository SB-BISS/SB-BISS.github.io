{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.testValidator = testValidator;\nexports.default = isBase32;\n\nvar _validate = _interopRequireDefault(require(\"./validate\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction testValidator(validate, value, ipfsCompat) {\n  try {\n    return validate(value, ipfsCompat);\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction isBase32(value, ipfsCompat) {\n  return testValidator(_validate.default, value, ipfsCompat);\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api/node_modules/@polkadot/util-crypto/base32/is.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","testValidator","default","isBase32","_validate","validate","ipfsCompat","error"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACAF,OAAO,CAACG,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC,C,CAEA;AACA;;;AACA,SAASK,aAAT,CAAuBI,QAAvB,EAAiCL,KAAjC,EAAwCM,UAAxC,EAAoD;AAClD,MAAI;AACF,WAAOD,QAAQ,CAACL,KAAD,EAAQM,UAAR,CAAf;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACd,WAAO,KAAP;AACD;AACF;;AAED,SAASJ,QAAT,CAAkBH,KAAlB,EAAyBM,UAAzB,EAAqC;AACnC,SAAOL,aAAa,CAACG,SAAS,CAACF,OAAX,EAAoBF,KAApB,EAA2BM,UAA3B,CAApB;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.testValidator = testValidator;\nexports.default = isBase32;\n\nvar _validate = _interopRequireDefault(require(\"./validate\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction testValidator(validate, value, ipfsCompat) {\n  try {\n    return validate(value, ipfsCompat);\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction isBase32(value, ipfsCompat) {\n  return testValidator(_validate.default, value, ipfsCompat);\n}"]},"metadata":{},"sourceType":"script"}