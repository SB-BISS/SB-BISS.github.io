{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEthereumChecksum;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _keccak = require(\"../keccak\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction isInvalidChar(char, byte) {\n  return byte > 7 && char !== char.toUpperCase() || byte <= 7 && char !== char.toLowerCase();\n}\n\nfunction isEthereumChecksum(_address) {\n  var address = _address.replace('0x', '');\n\n  var hash = (0, _util.u8aToHex)((0, _keccak.keccakAsU8a)(address.toLowerCase()), -1, false);\n\n  for (var index = 0; index < 40; index++) {\n    if (isInvalidChar(address[index], parseInt(hash[index], 16))) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/metadata/node_modules/@polkadot/util-crypto/ethereum/isChecksum.js"],"names":["Object","defineProperty","exports","value","default","isEthereumChecksum","_util","require","_keccak","isInvalidChar","char","byte","toUpperCase","toLowerCase","_address","address","replace","hash","u8aToHex","keccakAsU8a","index","parseInt"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,kBAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB,C,CAEA;AACA;;;AACA,SAASE,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACjC,SAAOA,IAAI,GAAG,CAAP,IAAYD,IAAI,KAAKA,IAAI,CAACE,WAAL,EAArB,IAA2CD,IAAI,IAAI,CAAR,IAAaD,IAAI,KAAKA,IAAI,CAACG,WAAL,EAAxE;AACD;;AAED,SAASR,kBAAT,CAA4BS,QAA5B,EAAsC;AACpC,MAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,CAAhB;;AAEA,MAAMC,IAAI,GAAG,CAAC,GAAGX,KAAK,CAACY,QAAV,EAAoB,CAAC,GAAGV,OAAO,CAACW,WAAZ,EAAyBJ,OAAO,CAACF,WAAR,EAAzB,CAApB,EAAqE,CAAC,CAAtE,EAAyE,KAAzE,CAAb;;AAEA,OAAK,IAAIO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACvC,QAAIX,aAAa,CAACM,OAAO,CAACK,KAAD,CAAR,EAAiBC,QAAQ,CAACJ,IAAI,CAACG,KAAD,CAAL,EAAc,EAAd,CAAzB,CAAjB,EAA8D;AAC5D,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEthereumChecksum;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _keccak = require(\"../keccak\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction isInvalidChar(char, byte) {\n  return byte > 7 && char !== char.toUpperCase() || byte <= 7 && char !== char.toLowerCase();\n}\n\nfunction isEthereumChecksum(_address) {\n  const address = _address.replace('0x', '');\n\n  const hash = (0, _util.u8aToHex)((0, _keccak.keccakAsU8a)(address.toLowerCase()), -1, false);\n\n  for (let index = 0; index < 40; index++) {\n    if (isInvalidChar(address[index], parseInt(hash[index], 16))) {\n      return false;\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"script"}