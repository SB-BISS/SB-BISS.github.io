{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toMiniSecret;\n\nvar _pbkdf = require(\"pbkdf2\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _toEntropy = _interopRequireDefault(require(\"./toEntropy\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction toMiniSecret(mnemonic) {\n  var password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var onlyJs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if ((0, _wasmCrypto.isReady)() && !onlyJs) {\n    return (0, _wasmCrypto.bip39ToMiniSecret)(mnemonic, password);\n  }\n\n  var entropy = (0, _util.u8aToBuffer)((0, _toEntropy.default)(mnemonic));\n  var salt = (0, _util.u8aToBuffer)((0, _util.stringToU8a)(\"mnemonic\".concat(password))); // return the first 32 bytes as the seed\n\n  return (0, _util.bufferToU8a)((0, _pbkdf.pbkdf2Sync)(entropy, salt, 2048, 64, 'sha512')).slice(0, 32);\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/metadata/node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","toMiniSecret","_pbkdf","_util","_wasmCrypto","_toEntropy","mnemonic","password","onlyJs","isReady","bip39ToMiniSecret","entropy","u8aToBuffer","salt","stringToU8a","bufferToU8a","pbkdf2Sync","slice"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGP,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIS,WAAW,GAAGT,OAAO,CAAC,uBAAD,CAAzB;;AAEA,IAAIU,UAAU,GAAGX,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC,C,CAEA;AACA;;;AACA,SAASM,YAAT,CAAsBK,QAAtB,EAA+D;AAAA,MAA/BC,QAA+B,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;;AAC7D,MAAI,CAAC,GAAGJ,WAAW,CAACK,OAAhB,OAA8B,CAACD,MAAnC,EAA2C;AACzC,WAAO,CAAC,GAAGJ,WAAW,CAACM,iBAAhB,EAAmCJ,QAAnC,EAA6CC,QAA7C,CAAP;AACD;;AAED,MAAMI,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACS,WAAV,EAAuB,CAAC,GAAGP,UAAU,CAACL,OAAf,EAAwBM,QAAxB,CAAvB,CAAhB;AACA,MAAMO,IAAI,GAAG,CAAC,GAAGV,KAAK,CAACS,WAAV,EAAuB,CAAC,GAAGT,KAAK,CAACW,WAAV,oBAAkCP,QAAlC,EAAvB,CAAb,CAN6D,CAMuB;;AAEpF,SAAO,CAAC,GAAGJ,KAAK,CAACY,WAAV,EAAuB,CAAC,GAAGb,MAAM,CAACc,UAAX,EAAuBL,OAAvB,EAAgCE,IAAhC,EAAsC,IAAtC,EAA4C,EAA5C,EAAgD,QAAhD,CAAvB,EAAkFI,KAAlF,CAAwF,CAAxF,EAA2F,EAA3F,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toMiniSecret;\n\nvar _pbkdf = require(\"pbkdf2\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _toEntropy = _interopRequireDefault(require(\"./toEntropy\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction toMiniSecret(mnemonic, password = '', onlyJs = false) {\n  if ((0, _wasmCrypto.isReady)() && !onlyJs) {\n    return (0, _wasmCrypto.bip39ToMiniSecret)(mnemonic, password);\n  }\n\n  const entropy = (0, _util.u8aToBuffer)((0, _toEntropy.default)(mnemonic));\n  const salt = (0, _util.u8aToBuffer)((0, _util.stringToU8a)(`mnemonic${password}`)); // return the first 32 bytes as the seed\n\n  return (0, _util.bufferToU8a)((0, _pbkdf.pbkdf2Sync)(entropy, salt, 2048, 64, 'sha512')).slice(0, 32);\n}"]},"metadata":{},"sourceType":"script"}