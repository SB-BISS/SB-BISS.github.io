{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _apiDerive = _interopRequireDefault(require(\"@polkadot/api-derive\"));\n\nvar _util = require(\"@polkadot/api-derive/util\");\n\nvar _metadata = require(\"@polkadot/metadata\");\n\nvar _rpcCore = _interopRequireDefault(require(\"@polkadot/rpc-core\"));\n\nvar _rpcProvider = require(\"@polkadot/rpc-provider\");\n\nvar _types = require(\"@polkadot/types\");\n\nvar _constants = require(\"@polkadot/types/extrinsic/constants\");\n\nvar _StorageKey = require(\"@polkadot/types/primitive/StorageKey\");\n\nvar _util2 = require(\"@polkadot/util\");\n\nvar _submittable = require(\"../submittable\");\n\nvar _augmentObject = _interopRequireDefault(require(\"../util/augmentObject\"));\n\nvar _decorate = require(\"../util/decorate\");\n\nvar _validate = require(\"../util/validate\");\n\nvar _Events = _interopRequireDefault(require(\"./Events\")); // Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst PAGE_SIZE_KEYS = 256;\nconst PAGE_SIZE_VALS = PAGE_SIZE_KEYS;\nconst l = (0, _util2.logger)('api/init');\nlet instanceCounter = 0;\n\nvar _instanceId = (0, _classPrivateFieldLooseKey2.default)(\"instanceId\");\n\nvar _registry = (0, _classPrivateFieldLooseKey2.default)(\"registry\");\n\nclass Decorate extends _Events.default {\n  // HACK Use BN import so decorateDerive works... yes, wtf.\n\n  /**\n   * This is the one and only method concrete children classes need to implement.\n   * It's a higher-order function, which takes one argument\n   * `method: Method extends (...args: any[]) => Observable<any>`\n   * (and one optional `options`), and should return the user facing method.\n   * For example:\n   * - For ApiRx, `decorateMethod` should just be identity, because the input\n   * function is already an Observable\n   * - For ApiPromise, `decorateMethod` should return a function that takes all\n   * the parameters from `method`, adds an optional `callback` argument, and\n   * returns a Promise.\n   *\n   * We could easily imagine other user-facing interfaces, which are simply\n   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon\n   * via `decorateMethod`.\n   */\n\n  /**\n   * @description Create an instance of the class\n   *\n   * @param options Options object to create API instance or a Provider instance\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * import Api from '@polkadot/api/promise';\n   *\n   * const api = new Api().isReady();\n   *\n   * api.rpc.subscribeNewHeads((header) => {\n   *   console.log(`new block #${header.number.toNumber()}`);\n   * });\n   * ```\n   */\n  constructor(options, type, decorateMethod) {\n    var _options$source;\n\n    super();\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registry, {\n      writable: true,\n      value: void 0\n    });\n    this.__phantom = new _bn.default(0);\n    this._consts = {};\n    this._derive = void 0;\n    this._extrinsics = void 0;\n    this._extrinsicType = _constants.DEFAULT_VERSION;\n    this._genesisHash = void 0;\n    this._isConnected = void 0;\n    this._isReady = false;\n    this._options = void 0;\n    this._query = {};\n    this._queryMulti = void 0;\n    this._rpc = void 0;\n    this._rpcCore = void 0;\n    this._runtimeChain = void 0;\n    this._runtimeMetadata = void 0;\n    this._runtimeVersion = void 0;\n    this._rx = {\n      consts: {},\n      query: {},\n      tx: {}\n    };\n    this._type = void 0;\n    this._decorateMethod = void 0;\n\n    this._rxDecorateMethod = method => {\n      return method;\n    };\n\n    (0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId] = `${++instanceCounter}`;\n    (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new _types.TypeRegistry();\n    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new _rpcProvider.WsProvider();\n    this._decorateMethod = decorateMethod;\n    this._options = options;\n    this._type = type;\n    this._rpcCore = new _rpcCore.default((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], thisProvider, this._options.rpc);\n    this._isConnected = new _rxjs.BehaviorSubject(this._rpcCore.provider.isConnected);\n    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n    this._rx.registry = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry];\n  }\n  /**\n   * @description Return the current used registry\n   */\n\n\n  get registry() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry];\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry].createType(type, ...params);\n  }\n  /**\n   * @description Register additional user-defined of chain-specific types in the type registry\n   */\n\n\n  registerTypes(types) {\n    types && (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry].register(types);\n  }\n  /**\n   * @returns `true` if the API operates with subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return this._rpcCore.provider.hasSubscriptions;\n  }\n\n  injectMetadata(metadata, fromEmpty, registry) {\n    const decoratedMeta = (0, _metadata.expandMetadata)(registry || (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], metadata);\n\n    if (fromEmpty || !this._extrinsics) {\n      this._extrinsics = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n      this._rx.tx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n    } else {\n      (0, _augmentObject.default)('tx', this._decorateExtrinsics(decoratedMeta, this._decorateMethod), this._extrinsics, false);\n      (0, _augmentObject.default)(null, this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod), this._rx.tx, false);\n    } // this API\n\n\n    (0, _augmentObject.default)('query', this._decorateStorage(decoratedMeta, this._decorateMethod), this._query, fromEmpty);\n    (0, _augmentObject.default)('consts', decoratedMeta.consts, this._consts, fromEmpty); // rx\n\n    (0, _augmentObject.default)(null, this._decorateStorage(decoratedMeta, this._rxDecorateMethod), this._rx.query, fromEmpty);\n    (0, _augmentObject.default)(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n  }\n\n  _decorateFunctionMeta(input, output) {\n    output.meta = input.meta;\n    output.method = input.method;\n    output.section = input.section;\n    output.toJSON = input.toJSON;\n\n    if (input.callIndex) {\n      output.callIndex = input.callIndex;\n    }\n\n    return output;\n  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n  // manner to cater for both old and new:\n  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n  //   - when non-zero, remove anything that is not in the array (we don't do this)\n\n\n  async _filterRpc() {\n    let methods;\n\n    try {\n      // we ignore the version (adjust as versions change, for now only \"1\")\n      methods = (await this._rpcCore.rpc.methods().toPromise()).methods.map(t => t.toString());\n    } catch (error) {\n      // the method is not there, we adjust accordingly\n      methods = [];\n    }\n\n    this._filterRpcMethods(methods);\n  }\n\n  _filterRpcMethods(exposed) {\n    const hasResults = exposed.length !== 0;\n    const allKnown = [...this._rpcCore.mapping.entries()];\n    const allKeys = allKnown.reduce((allKeys, [, {\n      alias,\n      endpoint,\n      method,\n      pubsub,\n      section\n    }]) => {\n      allKeys.push(`${section}_${method}`);\n\n      if (pubsub) {\n        allKeys.push(`${section}_${pubsub[1]}`);\n        allKeys.push(`${section}_${pubsub[2]}`);\n      }\n\n      if (alias) {\n        allKeys.push(...alias);\n      }\n\n      if (endpoint) {\n        allKeys.push(endpoint);\n      }\n\n      return allKeys;\n    }, []);\n    const unknown = exposed.filter(key => !allKeys.includes(key));\n\n    if (unknown.length) {\n      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n    } // loop through all entries we have (populated in decorate) and filter as required\n    // only remove when we have results and method missing, or with no results if optional\n\n\n    allKnown.filter(([key]) => hasResults ? !exposed.includes(key) && key !== 'rpc_methods' // rpc_methods doesn't appear, v1\n    : key === 'rpc_methods' // we didn't find this one, remove\n    ) // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    .forEach(([_, {\n      method,\n      section\n    }]) => {\n      delete this._rpc[section][method];\n      delete this._rpcCore[section][method];\n      delete this._rx.rpc[section][method];\n    });\n  }\n\n  _decorateRpc(rpc, decorateMethod) {\n    return rpc.sections.reduce((out, _sectionName) => {\n      const sectionName = _sectionName; // out and section here are horrors to get right from a typing perspective :(\n\n      out[sectionName] = Object.entries(rpc[sectionName]).reduce((section, [methodName, method]) => {\n        //  skip subscriptions where we have a non-subscribe interface\n        if (this.hasSubscriptions || !(methodName.startsWith('subscribe') || methodName.startsWith('unsubscribe'))) {\n          section[methodName] = decorateMethod(method, {\n            methodName\n          }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n          section[methodName].json = decorateMethod(method.json, {\n            methodName\n          }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n          section[methodName].raw = decorateMethod(method.raw, {\n            methodName\n          });\n        }\n\n        return section;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateMulti(decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod(calls => this._rpcCore.state.subscribeStorage(calls.map(arg => Array.isArray(arg) ? [arg[0].creator, ...arg.slice(1)] : [arg.creator])));\n  }\n\n  _decorateExtrinsics({\n    tx\n  }, decorateMethod) {\n    const creator = (0, _submittable.createSubmittable)(this._type, this._rx, decorateMethod);\n    return Object.entries(tx).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateExtrinsicEntry(method, creator);\n        return out;\n      }, {});\n      return out;\n    }, creator);\n  }\n\n  _decorateExtrinsicEntry(method, creator) {\n    const decorated = (...params) => creator(method(...params)); // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return this._decorateFunctionMeta(method, decorated);\n  }\n\n  _decorateStorage({\n    query\n  }, decorateMethod) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntry(method, decorateMethod);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageEntry(creator, decorateMethod) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = (...args) => (0, _validate.extractStorageArgs)(creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = this._decorateStorageCall(creator, decorateMethod);\n\n    decorated.creator = creator;\n    decorated.at = decorateMethod((hash, arg1, arg2) => this._rpcCore.state.getStorage(getArgs(arg1, arg2), hash));\n    decorated.hash = decorateMethod((arg1, arg2) => this._rpcCore.state.getStorageHash(getArgs(arg1, arg2)));\n\n    decorated.key = (arg1, arg2) => (0, _util2.u8aToHex)((0, _util2.compactStripLength)(creator(creator.meta.type.isDoubleMap ? [arg1, arg2] : arg1))[1]);\n\n    decorated.keyPrefix = key1 => (0, _util2.u8aToHex)(creator.keyPrefix(key1));\n\n    decorated.range = decorateMethod((range, arg1, arg2) => this._decorateStorageRange(decorated, [arg1, arg2], range));\n    decorated.size = decorateMethod((arg1, arg2) => this._rpcCore.state.getStorageSize(getArgs(arg1, arg2))); // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && (creator.meta.type.isMap || creator.meta.type.isDoubleMap)) {\n      decorated.entries = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], doubleMapArg => this._retrieveMapEntries(creator, null, doubleMapArg)));\n      decorated.entriesAt = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], (hash, doubleMapArg) => this._retrieveMapEntries(creator, hash, doubleMapArg)));\n      decorated.entriesPaged = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));\n      decorated.keys = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], doubleMapArg => this._retrieveMapKeys(creator, null, doubleMapArg)));\n      decorated.keysAt = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], (hash, doubleMapArg) => this._retrieveMapKeys(creator, hash, doubleMapArg)));\n      decorated.keysPaged = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));\n    } // only support multi where subs are available\n\n\n    if (this.hasSubscriptions) {\n      // When using double map storage function, user need to pass double map key as an array\n      decorated.multi = decorateMethod(args => this._rpcCore.state.subscribeStorage(args.map(arg => [creator, arg])));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n  // we make a subscription, alternatively we push this through a single-shot query\n\n\n  _decorateStorageCall(creator, decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod((...args) => {\n      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([(0, _validate.extractStorageArgs)(creator, args)]).pipe((0, _operators.map)(([data]) => data) // extract first/only result from list\n      ) : this._rpcCore.state.getStorage((0, _validate.extractStorageArgs)(creator, args));\n    }, {\n      methodName: creator.method,\n      overrideNoSub: (...args) => this._rpcCore.state.getStorage((0, _validate.extractStorageArgs)(creator, args))\n    });\n  }\n\n  _decorateStorageRange(decorated, args, range) {\n    const outputType = (0, _StorageKey.unwrapStorageType)(decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);\n    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe((0, _operators.map)(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));\n  }\n\n  _retrieveMapKeys({\n    iterKey,\n    meta,\n    method,\n    section\n  }, at, arg) {\n    (0, _util2.assert)(iterKey && (meta.type.isMap || meta.type.isDoubleMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(arg).toHex();\n    const startSubject = new _rxjs.BehaviorSubject(headKey);\n    const query = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_KEYS, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_KEYS, startKey);\n    return startSubject.pipe((0, _operators.switchMap)(startKey => query(startKey).pipe((0, _operators.map)(keys => keys.map(key => key.setMeta(meta, section, method))))), (0, _operators.tap)(keys => {\n      keys.length === PAGE_SIZE_KEYS ? startSubject.next(keys[PAGE_SIZE_KEYS - 1].toHex()) : startSubject.complete();\n    }), (0, _operators.toArray)(), // toArray since we want to startSubject to be completed\n    (0, _operators.map)(keysArr => keysArr.reduce((result, keys) => result.concat(keys), [])));\n  }\n\n  _retrieveMapKeysPaged({\n    iterKey,\n    meta,\n    method,\n    section\n  }, opts) {\n    (0, _util2.assert)(iterKey && (meta.type.isMap || meta.type.isDoubleMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(opts.arg).toHex();\n    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe((0, _operators.map)(keys => keys.map(key => key.setMeta(meta, section, method))));\n  }\n\n  _retrieveMapEntries(entry, at, arg) {\n    const query = this._rpcCore.state.queryStorageAt ? at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset) // this is horrible, but need older support (which now doesn't work with at)\n    : keyset => this._rpcCore.state.subscribeStorage(keyset).pipe((0, _operators.take)(1));\n    return this._retrieveMapKeys(entry, at, arg).pipe((0, _operators.switchMap)(keys => (0, _rxjs.combineLatest)([(0, _rxjs.of)(keys), ...Array(Math.ceil(keys.length / PAGE_SIZE_VALS)).fill(0).map((_, index) => query(keys.slice(index * PAGE_SIZE_VALS, index * PAGE_SIZE_VALS + PAGE_SIZE_VALS)))])), (0, _operators.map)(([keys, ...valsArr]) => valsArr.reduce((result, vals) => result.concat(vals), []).map((value, index) => [keys[index], value])));\n  }\n\n  _retrieveMapEntriesPaged(entry, opts) {\n    return this._retrieveMapKeysPaged(entry, opts).pipe((0, _operators.switchMap)(keys => (0, _rxjs.combineLatest)([(0, _rxjs.of)(keys), this._rpcCore.state.queryStorageAt(keys)])), (0, _operators.map)(([keys, ...valsArr]) => valsArr.reduce((result, vals) => result.concat(vals), []).map((value, index) => [keys[index], value])));\n  }\n\n  _decorateDeriveRx(decorateMethod) {\n    // Pull in derive from api-derive\n    const derive = (0, _apiDerive.default)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], this._rx, this._options.derives);\n    return (0, _decorate.decorateSections)(derive, decorateMethod);\n  }\n\n  _decorateDerive(decorateMethod) {\n    return (0, _decorate.decorateSections)(this._rx.derive, decorateMethod);\n  }\n  /**\n   * Put the `this.onCall` function of ApiRx here, because it is needed by\n   * `api._rx`.\n   */\n\n\n}\n\nexports.default = Decorate;","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api/base/Decorate.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_bn","_rxjs","_operators","_apiDerive","_util","_metadata","_rpcCore","_rpcProvider","_types","_constants","_StorageKey","_util2","_submittable","_augmentObject","_decorate","_validate","_Events","PAGE_SIZE_KEYS","PAGE_SIZE_VALS","l","logger","instanceCounter","_instanceId","_registry","Decorate","constructor","options","type","decorateMethod","_options$source","writable","__phantom","_consts","_derive","_extrinsics","_extrinsicType","DEFAULT_VERSION","_genesisHash","_isConnected","_isReady","_options","_query","_queryMulti","_rpc","_runtimeChain","_runtimeMetadata","_runtimeVersion","_rx","consts","query","tx","_type","_decorateMethod","_rxDecorateMethod","method","source","registry","TypeRegistry","thisProvider","provider","clone","WsProvider","rpc","BehaviorSubject","isConnected","hasSubscriptions","createType","params","registerTypes","types","register","injectMetadata","metadata","fromEmpty","decoratedMeta","expandMetadata","_decorateExtrinsics","_decorateStorage","_decorateFunctionMeta","input","output","meta","section","toJSON","callIndex","_filterRpc","methods","toPromise","map","t","toString","error","_filterRpcMethods","exposed","hasResults","length","allKnown","mapping","entries","allKeys","reduce","alias","endpoint","pubsub","push","unknown","filter","key","includes","warn","join","forEach","_","_decorateRpc","sections","out","_sectionName","sectionName","methodName","startsWith","json","raw","_decorateMulti","calls","state","subscribeStorage","arg","Array","isArray","creator","slice","createSubmittable","name","_decorateExtrinsicEntry","decorated","_decorateStorageEntry","getArgs","args","extractStorageArgs","_decorateStorageCall","at","hash","arg1","arg2","getStorage","getStorageHash","u8aToHex","compactStripLength","isDoubleMap","keyPrefix","key1","range","_decorateStorageRange","size","getStorageSize","iterKey","isMap","memo","doubleMapArg","_retrieveMapEntries","entriesAt","entriesPaged","opts","_retrieveMapEntriesPaged","keys","_retrieveMapKeys","keysAt","keysPaged","_retrieveMapKeysPaged","multi","pipe","data","overrideNoSub","outputType","unwrapStorageType","modifier","isOptional","queryStorage","result","blockHash","isSome","unwrap","toHex","undefined","assert","headKey","startSubject","startKey","getKeysPaged","switchMap","setMeta","tap","next","complete","toArray","keysArr","concat","pageSize","entry","queryStorageAt","keyset","take","combineLatest","of","Math","ceil","fill","index","valsArr","vals","_decorateDeriveRx","derive","derives","decorateSections","_decorateDerive"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _apiDerive = _interopRequireDefault(require(\"@polkadot/api-derive\"));\n\nvar _util = require(\"@polkadot/api-derive/util\");\n\nvar _metadata = require(\"@polkadot/metadata\");\n\nvar _rpcCore = _interopRequireDefault(require(\"@polkadot/rpc-core\"));\n\nvar _rpcProvider = require(\"@polkadot/rpc-provider\");\n\nvar _types = require(\"@polkadot/types\");\n\nvar _constants = require(\"@polkadot/types/extrinsic/constants\");\n\nvar _StorageKey = require(\"@polkadot/types/primitive/StorageKey\");\n\nvar _util2 = require(\"@polkadot/util\");\n\nvar _submittable = require(\"../submittable\");\n\nvar _augmentObject = _interopRequireDefault(require(\"../util/augmentObject\"));\n\nvar _decorate = require(\"../util/decorate\");\n\nvar _validate = require(\"../util/validate\");\n\nvar _Events = _interopRequireDefault(require(\"./Events\"));\n\n// Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst PAGE_SIZE_KEYS = 256;\nconst PAGE_SIZE_VALS = PAGE_SIZE_KEYS;\nconst l = (0, _util2.logger)('api/init');\nlet instanceCounter = 0;\n\nvar _instanceId = (0, _classPrivateFieldLooseKey2.default)(\"instanceId\");\n\nvar _registry = (0, _classPrivateFieldLooseKey2.default)(\"registry\");\n\nclass Decorate extends _Events.default {\n  // HACK Use BN import so decorateDerive works... yes, wtf.\n\n  /**\n   * This is the one and only method concrete children classes need to implement.\n   * It's a higher-order function, which takes one argument\n   * `method: Method extends (...args: any[]) => Observable<any>`\n   * (and one optional `options`), and should return the user facing method.\n   * For example:\n   * - For ApiRx, `decorateMethod` should just be identity, because the input\n   * function is already an Observable\n   * - For ApiPromise, `decorateMethod` should return a function that takes all\n   * the parameters from `method`, adds an optional `callback` argument, and\n   * returns a Promise.\n   *\n   * We could easily imagine other user-facing interfaces, which are simply\n   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon\n   * via `decorateMethod`.\n   */\n\n  /**\n   * @description Create an instance of the class\n   *\n   * @param options Options object to create API instance or a Provider instance\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * import Api from '@polkadot/api/promise';\n   *\n   * const api = new Api().isReady();\n   *\n   * api.rpc.subscribeNewHeads((header) => {\n   *   console.log(`new block #${header.number.toNumber()}`);\n   * });\n   * ```\n   */\n  constructor(options, type, decorateMethod) {\n    var _options$source;\n\n    super();\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registry, {\n      writable: true,\n      value: void 0\n    });\n    this.__phantom = new _bn.default(0);\n    this._consts = {};\n    this._derive = void 0;\n    this._extrinsics = void 0;\n    this._extrinsicType = _constants.DEFAULT_VERSION;\n    this._genesisHash = void 0;\n    this._isConnected = void 0;\n    this._isReady = false;\n    this._options = void 0;\n    this._query = {};\n    this._queryMulti = void 0;\n    this._rpc = void 0;\n    this._rpcCore = void 0;\n    this._runtimeChain = void 0;\n    this._runtimeMetadata = void 0;\n    this._runtimeVersion = void 0;\n    this._rx = {\n      consts: {},\n      query: {},\n      tx: {}\n    };\n    this._type = void 0;\n    this._decorateMethod = void 0;\n\n    this._rxDecorateMethod = method => {\n      return method;\n    };\n\n    (0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId] = `${++instanceCounter}`;\n    (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new _types.TypeRegistry();\n    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new _rpcProvider.WsProvider();\n    this._decorateMethod = decorateMethod;\n    this._options = options;\n    this._type = type;\n    this._rpcCore = new _rpcCore.default((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], thisProvider, this._options.rpc);\n    this._isConnected = new _rxjs.BehaviorSubject(this._rpcCore.provider.isConnected);\n    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;\n    this._rx.registry = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry];\n  }\n  /**\n   * @description Return the current used registry\n   */\n\n\n  get registry() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry];\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry].createType(type, ...params);\n  }\n  /**\n   * @description Register additional user-defined of chain-specific types in the type registry\n   */\n\n\n  registerTypes(types) {\n    types && (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry].register(types);\n  }\n  /**\n   * @returns `true` if the API operates with subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return this._rpcCore.provider.hasSubscriptions;\n  }\n\n  injectMetadata(metadata, fromEmpty, registry) {\n    const decoratedMeta = (0, _metadata.expandMetadata)(registry || (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], metadata);\n\n    if (fromEmpty || !this._extrinsics) {\n      this._extrinsics = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);\n      this._rx.tx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);\n    } else {\n      (0, _augmentObject.default)('tx', this._decorateExtrinsics(decoratedMeta, this._decorateMethod), this._extrinsics, false);\n      (0, _augmentObject.default)(null, this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod), this._rx.tx, false);\n    } // this API\n\n\n    (0, _augmentObject.default)('query', this._decorateStorage(decoratedMeta, this._decorateMethod), this._query, fromEmpty);\n    (0, _augmentObject.default)('consts', decoratedMeta.consts, this._consts, fromEmpty); // rx\n\n    (0, _augmentObject.default)(null, this._decorateStorage(decoratedMeta, this._rxDecorateMethod), this._rx.query, fromEmpty);\n    (0, _augmentObject.default)(null, decoratedMeta.consts, this._rx.consts, fromEmpty);\n  }\n\n  _decorateFunctionMeta(input, output) {\n    output.meta = input.meta;\n    output.method = input.method;\n    output.section = input.section;\n    output.toJSON = input.toJSON;\n\n    if (input.callIndex) {\n      output.callIndex = input.callIndex;\n    }\n\n    return output;\n  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following\n  // manner to cater for both old and new:\n  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)\n  //   - when non-zero, remove anything that is not in the array (we don't do this)\n\n\n  async _filterRpc() {\n    let methods;\n\n    try {\n      // we ignore the version (adjust as versions change, for now only \"1\")\n      methods = (await this._rpcCore.rpc.methods().toPromise()).methods.map(t => t.toString());\n    } catch (error) {\n      // the method is not there, we adjust accordingly\n      methods = [];\n    }\n\n    this._filterRpcMethods(methods);\n  }\n\n  _filterRpcMethods(exposed) {\n    const hasResults = exposed.length !== 0;\n    const allKnown = [...this._rpcCore.mapping.entries()];\n    const allKeys = allKnown.reduce((allKeys, [, {\n      alias,\n      endpoint,\n      method,\n      pubsub,\n      section\n    }]) => {\n      allKeys.push(`${section}_${method}`);\n\n      if (pubsub) {\n        allKeys.push(`${section}_${pubsub[1]}`);\n        allKeys.push(`${section}_${pubsub[2]}`);\n      }\n\n      if (alias) {\n        allKeys.push(...alias);\n      }\n\n      if (endpoint) {\n        allKeys.push(endpoint);\n      }\n\n      return allKeys;\n    }, []);\n    const unknown = exposed.filter(key => !allKeys.includes(key));\n\n    if (unknown.length) {\n      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);\n    } // loop through all entries we have (populated in decorate) and filter as required\n    // only remove when we have results and method missing, or with no results if optional\n\n\n    allKnown.filter(([key]) => hasResults ? !exposed.includes(key) && key !== 'rpc_methods' // rpc_methods doesn't appear, v1\n    : key === 'rpc_methods' // we didn't find this one, remove\n    ) // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    .forEach(([_, {\n      method,\n      section\n    }]) => {\n      delete this._rpc[section][method];\n      delete this._rpcCore[section][method];\n      delete this._rx.rpc[section][method];\n    });\n  }\n\n  _decorateRpc(rpc, decorateMethod) {\n    return rpc.sections.reduce((out, _sectionName) => {\n      const sectionName = _sectionName; // out and section here are horrors to get right from a typing perspective :(\n\n      out[sectionName] = Object.entries(rpc[sectionName]).reduce((section, [methodName, method]) => {\n        //  skip subscriptions where we have a non-subscribe interface\n        if (this.hasSubscriptions || !(methodName.startsWith('subscribe') || methodName.startsWith('unsubscribe'))) {\n          section[methodName] = decorateMethod(method, {\n            methodName\n          }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n          section[methodName].json = decorateMethod(method.json, {\n            methodName\n          }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n          section[methodName].raw = decorateMethod(method.raw, {\n            methodName\n          });\n        }\n\n        return section;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateMulti(decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod(calls => this._rpcCore.state.subscribeStorage(calls.map(arg => Array.isArray(arg) ? [arg[0].creator, ...arg.slice(1)] : [arg.creator])));\n  }\n\n  _decorateExtrinsics({\n    tx\n  }, decorateMethod) {\n    const creator = (0, _submittable.createSubmittable)(this._type, this._rx, decorateMethod);\n    return Object.entries(tx).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateExtrinsicEntry(method, creator);\n        return out;\n      }, {});\n      return out;\n    }, creator);\n  }\n\n  _decorateExtrinsicEntry(method, creator) {\n    const decorated = (...params) => creator(method(...params)); // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return this._decorateFunctionMeta(method, decorated);\n  }\n\n  _decorateStorage({\n    query\n  }, decorateMethod) {\n    return Object.entries(query).reduce((out, [name, section]) => {\n      out[name] = Object.entries(section).reduce((out, [name, method]) => {\n        out[name] = this._decorateStorageEntry(method, decorateMethod);\n        return out;\n      }, {});\n      return out;\n    }, {});\n  }\n\n  _decorateStorageEntry(creator, decorateMethod) {\n    // get the storage arguments, with DoubleMap as an array entry, otherwise spread\n    const getArgs = (...args) => (0, _validate.extractStorageArgs)(creator, args); // Disable this where it occurs for each field we are decorating\n\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    const decorated = this._decorateStorageCall(creator, decorateMethod);\n\n    decorated.creator = creator;\n    decorated.at = decorateMethod((hash, arg1, arg2) => this._rpcCore.state.getStorage(getArgs(arg1, arg2), hash));\n    decorated.hash = decorateMethod((arg1, arg2) => this._rpcCore.state.getStorageHash(getArgs(arg1, arg2)));\n\n    decorated.key = (arg1, arg2) => (0, _util2.u8aToHex)((0, _util2.compactStripLength)(creator(creator.meta.type.isDoubleMap ? [arg1, arg2] : arg1))[1]);\n\n    decorated.keyPrefix = key1 => (0, _util2.u8aToHex)(creator.keyPrefix(key1));\n\n    decorated.range = decorateMethod((range, arg1, arg2) => this._decorateStorageRange(decorated, [arg1, arg2], range));\n    decorated.size = decorateMethod((arg1, arg2) => this._rpcCore.state.getStorageSize(getArgs(arg1, arg2))); // .keys() & .entries() only available on map types\n\n    if (creator.iterKey && (creator.meta.type.isMap || creator.meta.type.isDoubleMap)) {\n      decorated.entries = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], doubleMapArg => this._retrieveMapEntries(creator, null, doubleMapArg)));\n      decorated.entriesAt = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], (hash, doubleMapArg) => this._retrieveMapEntries(creator, hash, doubleMapArg)));\n      decorated.entriesPaged = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));\n      decorated.keys = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], doubleMapArg => this._retrieveMapKeys(creator, null, doubleMapArg)));\n      decorated.keysAt = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], (hash, doubleMapArg) => this._retrieveMapKeys(creator, hash, doubleMapArg)));\n      decorated.keysPaged = decorateMethod((0, _util.memo)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));\n    } // only support multi where subs are available\n\n\n    if (this.hasSubscriptions) {\n      // When using double map storage function, user need to pass double map key as an array\n      decorated.multi = decorateMethod(args => this._rpcCore.state.subscribeStorage(args.map(arg => [creator, arg])));\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n\n\n    return this._decorateFunctionMeta(creator, decorated);\n  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)\n  // we make a subscription, alternatively we push this through a single-shot query\n\n\n  _decorateStorageCall(creator, decorateMethod) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return decorateMethod((...args) => {\n      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([(0, _validate.extractStorageArgs)(creator, args)]).pipe((0, _operators.map)(([data]) => data) // extract first/only result from list\n      ) : this._rpcCore.state.getStorage((0, _validate.extractStorageArgs)(creator, args));\n    }, {\n      methodName: creator.method,\n      overrideNoSub: (...args) => this._rpcCore.state.getStorage((0, _validate.extractStorageArgs)(creator, args))\n    });\n  }\n\n  _decorateStorageRange(decorated, args, range) {\n    const outputType = (0, _StorageKey.unwrapStorageType)(decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);\n    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe((0, _operators.map)(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));\n  }\n\n  _retrieveMapKeys({\n    iterKey,\n    meta,\n    method,\n    section\n  }, at, arg) {\n    (0, _util2.assert)(iterKey && (meta.type.isMap || meta.type.isDoubleMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(arg).toHex();\n    const startSubject = new _rxjs.BehaviorSubject(headKey);\n    const query = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_KEYS, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_KEYS, startKey);\n    return startSubject.pipe((0, _operators.switchMap)(startKey => query(startKey).pipe((0, _operators.map)(keys => keys.map(key => key.setMeta(meta, section, method))))), (0, _operators.tap)(keys => {\n      keys.length === PAGE_SIZE_KEYS ? startSubject.next(keys[PAGE_SIZE_KEYS - 1].toHex()) : startSubject.complete();\n    }), (0, _operators.toArray)(), // toArray since we want to startSubject to be completed\n    (0, _operators.map)(keysArr => keysArr.reduce((result, keys) => result.concat(keys), [])));\n  }\n\n  _retrieveMapKeysPaged({\n    iterKey,\n    meta,\n    method,\n    section\n  }, opts) {\n    (0, _util2.assert)(iterKey && (meta.type.isMap || meta.type.isDoubleMap), 'keys can only be retrieved on maps, linked maps and double maps');\n    const headKey = iterKey(opts.arg).toHex();\n    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe((0, _operators.map)(keys => keys.map(key => key.setMeta(meta, section, method))));\n  }\n\n  _retrieveMapEntries(entry, at, arg) {\n    const query = this._rpcCore.state.queryStorageAt ? at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset) // this is horrible, but need older support (which now doesn't work with at)\n    : keyset => this._rpcCore.state.subscribeStorage(keyset).pipe((0, _operators.take)(1));\n    return this._retrieveMapKeys(entry, at, arg).pipe((0, _operators.switchMap)(keys => (0, _rxjs.combineLatest)([(0, _rxjs.of)(keys), ...Array(Math.ceil(keys.length / PAGE_SIZE_VALS)).fill(0).map((_, index) => query(keys.slice(index * PAGE_SIZE_VALS, index * PAGE_SIZE_VALS + PAGE_SIZE_VALS)))])), (0, _operators.map)(([keys, ...valsArr]) => valsArr.reduce((result, vals) => result.concat(vals), []).map((value, index) => [keys[index], value])));\n  }\n\n  _retrieveMapEntriesPaged(entry, opts) {\n    return this._retrieveMapKeysPaged(entry, opts).pipe((0, _operators.switchMap)(keys => (0, _rxjs.combineLatest)([(0, _rxjs.of)(keys), this._rpcCore.state.queryStorageAt(keys)])), (0, _operators.map)(([keys, ...valsArr]) => valsArr.reduce((result, vals) => result.concat(vals), []).map((value, index) => [keys[index], value])));\n  }\n\n  _decorateDeriveRx(decorateMethod) {\n    // Pull in derive from api-derive\n    const derive = (0, _apiDerive.default)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId], this._rx, this._options.derives);\n    return (0, _decorate.decorateSections)(derive, decorateMethod);\n  }\n\n  _decorateDerive(decorateMethod) {\n    return (0, _decorate.decorateSections)(this._rx.derive, decorateMethod);\n  }\n  /**\n   * Put the `this.onCall` function of ApiRx here, because it is needed by\n   * `api._rx`.\n   */\n\n\n}\n\nexports.default = Decorate;"]},"metadata":{},"sourceType":"script"}