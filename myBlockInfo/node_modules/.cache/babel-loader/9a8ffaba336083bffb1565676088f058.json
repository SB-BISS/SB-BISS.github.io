{"ast":null,"code":"import React,{createRef}from'react';import{Container,Dimmer,Loader,Grid,Message}from'semantic-ui-react';import'semantic-ui-css/semantic.min.css';import{SubstrateContextProvider,useSubstrate}from'./substrate-lib';import{DeveloperConsole}from'./substrate-lib/components';import BlockNumber from'./BlockNumber';import Metadata from'./Metadata';import NodeInfo from'./NodeInfo';import BlockInfo from'./BlockInfo';export var Main=function Main(){var _useSubstrate=useSubstrate(),apiState=_useSubstrate.apiState,keyringState=_useSubstrate.keyringState,apiError=_useSubstrate.apiError;var loader=function loader(text){return/*#__PURE__*/React.createElement(Dimmer,{active:true},/*#__PURE__*/React.createElement(Loader,{size:\"small\"},text));};var message=function message(err){return/*#__PURE__*/React.createElement(Grid,{centered:true,columns:2,padded:true},/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(Message,{negative:true,compact:true,floating:true,header:\"Error Connecting to Substrate\",content:\"\".concat(err)})));};if(apiState==='ERROR')return message(apiError);else if(apiState!=='READY')return loader('Connecting to Substrate');if(keyringState!=='READY'){return loader(\"Loading accounts (please review any extension's authorization)\");}var contextRef=createRef();return/*#__PURE__*/React.createElement(\"div\",{ref:contextRef},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{stackable:true,columns:\"equal\"},/*#__PURE__*/React.createElement(Grid.Row,{stretched:true},/*#__PURE__*/React.createElement(BlockInfo,null)),/*#__PURE__*/React.createElement(Grid.Row,{stretched:true},/*#__PURE__*/React.createElement(NodeInfo,null),/*#__PURE__*/React.createElement(Metadata,null),/*#__PURE__*/React.createElement(BlockNumber,null),/*#__PURE__*/React.createElement(BlockNumber,{finalized:true})))),/*#__PURE__*/React.createElement(DeveloperConsole,null));};export var App=function App(){return/*#__PURE__*/React.createElement(SubstrateContextProvider,null,/*#__PURE__*/React.createElement(Main,null));};export default App;","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/src/App.js"],"names":["React","createRef","Container","Dimmer","Loader","Grid","Message","SubstrateContextProvider","useSubstrate","DeveloperConsole","BlockNumber","Metadata","NodeInfo","BlockInfo","Main","apiState","keyringState","apiError","loader","text","message","err","contextRef","App"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,IAApC,CAA0CC,OAA1C,KAAyD,mBAAzD,CACA,MAAO,kCAAP,CAEA,OAASC,wBAAT,CAAmCC,YAAnC,KAAuD,iBAAvD,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,mBACqBN,YAAY,EADjC,CAChBO,QADgB,eAChBA,QADgB,CACNC,YADM,eACNA,YADM,CACQC,QADR,eACQA,QADR,CAGxB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,qBACb,oBAAC,MAAD,EAAQ,MAAM,KAAd,eACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,EAAsBA,IAAtB,CADF,CADa,EAAf,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,qBACd,oBAAC,IAAD,EAAM,QAAQ,KAAd,CAAe,OAAO,CAAE,CAAxB,CAA2B,MAAM,KAAjC,eACE,oBAAC,IAAD,CAAM,MAAN,mBACE,oBAAC,OAAD,EACE,QAAQ,KADV,CAEE,OAAO,KAFT,CAGE,QAAQ,KAHV,CAIE,MAAM,CAAC,+BAJT,CAKE,OAAO,WAAKA,GAAL,CALT,EADF,CADF,CADc,EAAhB,CAcA,GAAIN,QAAQ,GAAK,OAAjB,CAA0B,MAAOK,CAAAA,OAAO,CAACH,QAAD,CAAd,CAA1B,IACK,IAAIF,QAAQ,GAAK,OAAjB,CAA0B,MAAOG,CAAAA,MAAM,CAAC,yBAAD,CAAb,CAE/B,GAAIF,YAAY,GAAK,OAArB,CAA8B,CAC5B,MAAOE,CAAAA,MAAM,CACX,gEADW,CAAb,CAGD,CAED,GAAMI,CAAAA,UAAU,CAAGrB,SAAS,EAA5B,CAEA,mBACE,2BAAK,GAAG,CAAEqB,UAAV,eACE,oBAAC,SAAD,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,OAAxB,eACE,oBAAC,IAAD,CAAM,GAAN,EAAU,SAAS,KAAnB,eACE,oBAAC,SAAD,MADF,CADF,cAIE,oBAAC,IAAD,CAAM,GAAN,EAAU,SAAS,KAAnB,eACE,oBAAC,QAAD,MADF,cAEE,oBAAC,QAAD,MAFF,cAGE,oBAAC,WAAD,MAHF,cAIE,oBAAC,WAAD,EAAa,SAAS,KAAtB,EAJF,CAJF,CADF,CADF,cAcE,oBAAC,gBAAD,MAdF,CADF,CAkBD,CApDM,CAsDP,MAAO,IAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACvB,mBACE,oBAAC,wBAAD,mBACE,oBAAC,IAAD,MADF,CADF,CAKD,CANM,CAQP,cAAeA,CAAAA,GAAf","sourcesContent":["import React, { createRef } from 'react'\nimport { Container, Dimmer, Loader, Grid, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib'\nimport { DeveloperConsole } from './substrate-lib/components'\nimport BlockNumber from './BlockNumber'\nimport Metadata from './Metadata'\nimport NodeInfo from './NodeInfo'\nimport BlockInfo from './BlockInfo'\n\nexport const Main = () => {\n  const { apiState, keyringState, apiError } = useSubstrate()\n\n  const loader = (text) => (\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>\n  )\n\n  const message = (err) => (\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message\n          negative\n          compact\n          floating\n          header='Error Connecting to Substrate'\n          content={`${err}`}\n        />\n      </Grid.Column>\n    </Grid>\n  )\n\n  if (apiState === 'ERROR') return message(apiError)\n  else if (apiState !== 'READY') return loader('Connecting to Substrate')\n\n  if (keyringState !== 'READY') {\n    return loader(\n      \"Loading accounts (please review any extension's authorization)\"\n    )\n  }\n\n  const contextRef = createRef()\n\n  return (\n    <div ref={contextRef}>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <BlockInfo />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  )\n}\n\nexport const App = () => {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}