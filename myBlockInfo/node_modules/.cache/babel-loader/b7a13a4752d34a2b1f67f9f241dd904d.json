{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _slicedToArray = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _memoizee = _interopRequireDefault(require(\"memoizee\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _jsonrpc = _interopRequireDefault(require(\"@polkadot/types/interfaces/jsonrpc\"));\n\nvar _types = require(\"@polkadot/types\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _normalizer = _interopRequireDefault(require(\"./normalizer\"));\n\nvar _rxjs2 = require(\"./rxjs\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar l = (0, _util.logger)('rpc-core');\nvar EMPTY_META = {\n  fallback: undefined,\n  modifier: {\n    isOptional: true\n  },\n  type: {\n    asMap: {\n      linked: {\n        isTrue: false\n      }\n    },\n    isMap: false\n  }\n}; // utility method to create a nicely-formatted error\n\n/** @internal */\n\nfunction logErrorMessage(method, _ref3, error) {\n  var params = _ref3.params,\n      type = _ref3.type;\n  var inputs = params.map(function (_ref4) {\n    var isOptional = _ref4.isOptional,\n        name = _ref4.name,\n        type = _ref4.type;\n    return \"\".concat(name).concat(isOptional ? '?' : '', \": \").concat(type);\n  }).join(', ');\n  l.error(\"\".concat(method, \"(\").concat(inputs, \"): \").concat(type, \":: \").concat(error.message));\n}\n/**\n * @name Rpc\n * @summary The API may use a HTTP or WebSockets provider.\n * @description It allows for querying a Polkadot Client Node.\n * WebSockets provider is recommended since HTTP provider only supports basic querying.\n *\n * ```mermaid\n * graph LR;\n *   A[Api] --> |WebSockets| B[WsProvider];\n *   B --> |endpoint| C[ws://127.0.0.1:9944]\n * ```\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Rpc from '@polkadot/rpc-core';\n * import WsProvider from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const rpc = new Rpc(provider);\n * ```\n */\n\n\nvar _instanceId = (0, _classPrivateFieldLooseKey2.default)(\"instanceId\");\n\nvar _registryDefault = (0, _classPrivateFieldLooseKey2.default)(\"registryDefault\");\n\nvar _getBlockRegistry = (0, _classPrivateFieldLooseKey2.default)(\"getBlockRegistry\");\n\nvar _storageCache = (0, _classPrivateFieldLooseKey2.default)(\"storageCache\");\n\nvar Rpc = /*#__PURE__*/function () {\n  // Ok, this is quite horrible - we really should not be using the ! here, but we are actually assigning\n  // these via the createInterfaces inside the constructor. However... this is not quite visible. The reason\n  // why we don't do for individual assignments is to allow user-defined RPCs to also be defined\n\n  /**\n   * @constructor\n   * Default constructor for the Api Object\n   * @param  {ProviderInterface} provider An API provider using HTTP or WebSocket\n   */\n  function Rpc(instanceId, registry, provider) {\n    var _this$sections;\n\n    var userRpc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, Rpc);\n\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registryDefault, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _getBlockRegistry, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _storageCache, {\n      writable: true,\n      value: new Map()\n    });\n    this.mapping = new Map();\n    this.provider = void 0;\n    this.sections = [];\n    this.author = void 0;\n    this.babe = void 0;\n    this.chain = void 0;\n    this.childstate = void 0;\n    this.contracts = void 0;\n    this.engine = void 0;\n    this.grandpa = void 0;\n    this.offchain = void 0;\n    this.payment = void 0;\n    this.rpc = void 0;\n    this.state = void 0;\n    this.syncstate = void 0;\n    this.system = void 0; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n    (0, _util.assert)(provider && (0, _util.isFunction)(provider.send), 'Expected Provider to API create');\n    (0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId] = instanceId;\n    (0, _classPrivateFieldLooseBase2.default)(this, _registryDefault)[_registryDefault] = registry;\n    this.provider = provider;\n    var sectionNames = Object.keys(_jsonrpc.default); // these are the base keys (i.e. part of jsonrpc)\n\n    (_this$sections = this.sections).push.apply(_this$sections, _toConsumableArray(sectionNames));\n\n    this.addUserInterfaces(userRpc);\n  }\n  /**\n   * @description Returns the connected status of a provider\n   */\n\n\n  _createClass(Rpc, [{\n    key: \"connect\",\n\n    /**\n     * @description Manually connect from the attached provider\n     */\n    value: function connect() {\n      return this.provider.connect();\n    }\n    /**\n     * @description Manually disconnect from the attached provider\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return this.provider.disconnect();\n    }\n    /**\n     * @description Sets a registry swap (typically from Api)\n     */\n\n  }, {\n    key: \"setRegistrySwap\",\n    value: function setRegistrySwap(registrySwap) {\n      (0, _classPrivateFieldLooseBase2.default)(this, _getBlockRegistry)[_getBlockRegistry] = registrySwap;\n    }\n  }, {\n    key: \"addUserInterfaces\",\n    value: function addUserInterfaces(userRpc) {\n      var _this$sections2,\n          _this = this;\n\n      // add any extra user-defined sections\n      (_this$sections2 = this.sections).push.apply(_this$sections2, _toConsumableArray(Object.keys(userRpc).filter(function (key) {\n        return !_this.sections.includes(key);\n      }))); // decorate the sections with base and user methods\n\n\n      this.sections.forEach(function (sectionName) {\n        var _ref, _ref2;\n\n        (_ref = _this)[_ref2 = sectionName] || (_ref[_ref2] = {});\n        var section = _this[sectionName];\n        Object.entries(_objectSpread(_objectSpread({}, _this._createInterface(sectionName, _jsonrpc.default[sectionName] || {})), _this._createInterface(sectionName, userRpc[sectionName] || {}))).forEach(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n              key = _ref6[0],\n              value = _ref6[1];\n\n          section[key] || (section[key] = value);\n        });\n      });\n    }\n  }, {\n    key: \"_createInterface\",\n    value: function _createInterface(section, methods) {\n      var _this2 = this;\n\n      return Object.entries(methods).filter(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            method = _ref8[0],\n            endpoint = _ref8[1].endpoint;\n\n        return !_this2.mapping.has(endpoint || \"\".concat(section, \"_\").concat(method));\n      }).reduce(function (exposed, _ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n            method = _ref10[0],\n            endpoint = _ref10[1].endpoint;\n\n        var def = methods[method];\n        var isSubscription = !!def.pubsub;\n        var jsonrpc = endpoint || \"\".concat(section, \"_\").concat(method);\n\n        _this2.mapping.set(jsonrpc, _objectSpread(_objectSpread({}, def), {}, {\n          isSubscription: isSubscription,\n          jsonrpc: jsonrpc,\n          method: method,\n          section: section\n        })); // FIXME Remove any here\n        // To do so, remove `RpcInterfaceMethod` from './types.ts', and refactor\n        // every method inside this class to take:\n        // `<S extends keyof RpcInterface, M extends keyof RpcInterface[S]>`\n        // Not doing so, because it makes this class a little bit less readable,\n        // and leaving it as-is doesn't harm much\n\n\n        exposed[method] = isSubscription ? _this2._createMethodSubscribe(section, method, def) : _this2._createMethodSend(section, method, def);\n        return exposed;\n      }, {});\n    }\n  }, {\n    key: \"_memomize\",\n    value: function _memomize(creator) {\n      var memoized = (0, _memoizee.default)(creator('scale'), {\n        // Dynamic length for argument\n        length: false,\n        // Normalize args so that different args that should be cached\n        // together are cached together.\n        // E.g.: `query.my.method('abc') === query.my.method(createType('AccountId', 'abc'));`\n        normalizer: (0, _normalizer.default)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId])\n      });\n      memoized.json = creator('json');\n      memoized.raw = creator('raw');\n      return memoized;\n    }\n  }, {\n    key: \"_createMethodSend\",\n    value: function _createMethodSend(section, method, def) {\n      var _this3 = this;\n\n      var rpcName = def.endpoint || \"\".concat(section, \"_\").concat(method);\n      var hashIndex = def.params.findIndex(function (_ref11) {\n        var isHistoric = _ref11.isHistoric;\n        return isHistoric;\n      });\n      var cacheIndex = def.params.findIndex(function (_ref12) {\n        var isCached = _ref12.isCached;\n        return isCached;\n      });\n      var memoized = null; // execute the RPC call, doing a registry swap for historic as applicable\n\n      var callWithRegistry = /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(outputAs, values) {\n          var hash, _ref14, registry, params, data;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  hash = hashIndex === -1 ? undefined : values[hashIndex];\n\n                  if (!(hash && (0, _classPrivateFieldLooseBase2.default)(_this3, _getBlockRegistry)[_getBlockRegistry])) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return (0, _classPrivateFieldLooseBase2.default)(_this3, _getBlockRegistry)[_getBlockRegistry](hash);\n\n                case 4:\n                  _context.t0 = _context.sent;\n                  _context.next = 8;\n                  break;\n\n                case 7:\n                  _context.t0 = {\n                    registry: (0, _classPrivateFieldLooseBase2.default)(_this3, _registryDefault)[_registryDefault]\n                  };\n\n                case 8:\n                  _ref14 = _context.t0;\n                  registry = _ref14.registry;\n                  params = _this3._formatInputs(registry, def, values);\n                  _context.next = 13;\n                  return _this3.provider.send(rpcName, params.map(function (param) {\n                    return param.toJSON();\n                  }));\n\n                case 13:\n                  data = _context.sent;\n                  return _context.abrupt(\"return\", outputAs === 'scale' ? _this3._formatOutput(registry, method, def, params, data) : registry.createType(outputAs === 'raw' ? 'Raw' : 'Json', data));\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function callWithRegistry(_x, _x2) {\n          return _ref13.apply(this, arguments);\n        };\n      }();\n\n      var creator = function creator(outputAs) {\n        return function () {\n          for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n            values[_key] = arguments[_key];\n          }\n\n          var isDelayed = hashIndex !== -1 && !!values[hashIndex] || cacheIndex !== -1 && !!values[cacheIndex];\n          return new _rxjs.Observable(function (observer) {\n            callWithRegistry(outputAs, values).then(function (value) {\n              observer.next(value);\n              observer.complete();\n            }).catch(function (error) {\n              logErrorMessage(method, def, error);\n              observer.error(error);\n              observer.complete();\n            });\n            return function () {\n              var _memoized3;\n\n              var _memoized; // delete old results from cache\n\n\n              (_memoized = memoized) === null || _memoized === void 0 ? void 0 : (_memoized3 = _memoized).delete.apply(_memoized3, values);\n            };\n          }).pipe((0, _operators.publishReplay)(1), // create a Replay(1)\n          isDelayed ? (0, _rxjs2.refCountDelay)() // Unsubscribe after delay\n          : (0, _operators.refCount)());\n        };\n      };\n\n      memoized = this._memomize(creator);\n      return memoized;\n    } // create a subscriptor, it subscribes once and resolves with the id as subscribe\n\n  }, {\n    key: \"_createSubscriber\",\n    value: function _createSubscriber(_ref15, errorHandler) {\n      var _this4 = this;\n\n      var paramsJson = _ref15.paramsJson,\n          subName = _ref15.subName,\n          subType = _ref15.subType,\n          update = _ref15.update;\n      return new Promise(function (resolve, reject) {\n        _this4.provider.subscribe(subType, subName, paramsJson, update).then(resolve).catch(function (error) {\n          errorHandler(error);\n          reject(error);\n        });\n      });\n    }\n  }, {\n    key: \"_createMethodSubscribe\",\n    value: function _createMethodSubscribe(section, method, def) {\n      var _this5 = this;\n\n      var _def$pubsub = _slicedToArray(def.pubsub, 3),\n          updateType = _def$pubsub[0],\n          subMethod = _def$pubsub[1],\n          unsubMethod = _def$pubsub[2];\n\n      var subName = \"\".concat(section, \"_\").concat(subMethod);\n      var unsubName = \"\".concat(section, \"_\").concat(unsubMethod);\n      var subType = \"\".concat(section, \"_\").concat(updateType);\n      var memoized = null;\n\n      var creator = function creator(outputAs) {\n        return function () {\n          for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            values[_key2] = arguments[_key2];\n          }\n\n          return new _rxjs.Observable(function (observer) {\n            // Have at least an empty promise, as used in the unsubscribe\n            var subscriptionPromise = Promise.resolve(null);\n\n            var registry = (0, _classPrivateFieldLooseBase2.default)(_this5, _registryDefault)[_registryDefault];\n\n            var errorHandler = function errorHandler(error) {\n              logErrorMessage(method, def, error);\n              observer.error(error);\n            };\n\n            try {\n              var params = _this5._formatInputs(registry, def, values);\n\n              var paramsJson = params.map(function (param) {\n                return param.toJSON();\n              });\n\n              var update = function update(error, result) {\n                if (error) {\n                  logErrorMessage(method, def, error);\n                  return;\n                }\n\n                try {\n                  observer.next(outputAs === 'scale' ? _this5._formatOutput(registry, method, def, params, result) : registry.createType(outputAs === 'raw' ? 'Raw' : 'Json', result));\n                } catch (error) {\n                  observer.error(error);\n                }\n              };\n\n              subscriptionPromise = _this5._createSubscriber({\n                paramsJson: paramsJson,\n                subName: subName,\n                subType: subType,\n                update: update\n              }, errorHandler);\n            } catch (error) {\n              errorHandler(error);\n            } // Teardown logic\n\n\n            return function () {\n              var _memoized4;\n\n              var _memoized2; // Delete from cache, so old results don't hang around\n\n\n              (_memoized2 = memoized) === null || _memoized2 === void 0 ? void 0 : (_memoized4 = _memoized2).delete.apply(_memoized4, values); // Unsubscribe from provider\n\n              subscriptionPromise.then(function (subscriptionId) {\n                return (0, _util.isNull)(subscriptionId) ? Promise.resolve(false) : _this5.provider.unsubscribe(subType, unsubName, subscriptionId);\n              }).catch(function (error) {\n                return logErrorMessage(method, def, error);\n              });\n            };\n          }).pipe((0, _rxjs2.drr)());\n        };\n      };\n\n      memoized = this._memomize(creator);\n      return memoized;\n    }\n  }, {\n    key: \"_formatInputs\",\n    value: function _formatInputs(registry, def, inputs) {\n      var reqArgCount = def.params.filter(function (_ref16) {\n        var isOptional = _ref16.isOptional;\n        return !isOptional;\n      }).length;\n      var optText = reqArgCount === def.params.length ? '' : \" (\".concat(def.params.length - reqArgCount, \" optional)\");\n      (0, _util.assert)(inputs.length >= reqArgCount && inputs.length <= def.params.length, \"Expected \".concat(def.params.length, \" parameters\").concat(optText, \", \").concat(inputs.length, \" found instead\"));\n      return inputs.map(function (input, index) {\n        return (0, _types.createTypeUnsafe)(registry, def.params[index].type, [input]);\n      });\n    }\n  }, {\n    key: \"_treatAsHex\",\n    value: function _treatAsHex(key) {\n      // :code is problematic - it does not have the length attached, which is\n      // unlike all other storage entries where it is indeed properly encoded\n      return ['0x3a636f6465'].includes(key.toHex());\n    }\n  }, {\n    key: \"_formatOutput\",\n    value: function _formatOutput(registry, method, rpc, params, result) {\n      var _this6 = this;\n\n      if (rpc.type === 'StorageData') {\n        var key = params[0];\n\n        try {\n          return this._formatStorageData(registry, key, result);\n        } catch (error) {\n          l.error(\"Unable to decode storage \".concat(key.section || 'unknown', \".\").concat(key.method || 'unknown', \":\"), error.message);\n          throw error;\n        }\n      } else if (rpc.type === 'StorageChangeSet') {\n        var keys = params[0];\n        return keys ? this._formatStorageSet(registry, keys, result.changes) : registry.createType('StorageChangeSet', result);\n      } else if (rpc.type === 'Vec<StorageChangeSet>') {\n        var mapped = result.map(function (_ref17) {\n          var block = _ref17.block,\n              changes = _ref17.changes;\n          return [registry.createType('Hash', block), _this6._formatStorageSet(registry, params[0], changes)];\n        }); // we only query at a specific block, not a range - flatten\n\n        return method === 'queryStorageAt' ? mapped[0][1] : mapped;\n      }\n\n      return (0, _types.createTypeUnsafe)(registry, rpc.type, [result]);\n    }\n  }, {\n    key: \"_formatStorageData\",\n    value: function _formatStorageData(registry, key, value) {\n      // single return value (via state.getStorage), decode the value based on the\n      // outputType that we have specified. Fallback to Raw on nothing\n      var type = key.outputType || 'Raw';\n      var meta = key.meta || EMPTY_META;\n      var isEmpty = (0, _util.isNull)(value); // we convert to Uint8Array since it maps to the raw encoding, all\n      // data will be correctly encoded (incl. numbers, excl. :code)\n\n      var input = isEmpty ? null : this._treatAsHex(key) ? value : (0, _util.u8aToU8a)(value);\n\n      if (meta.modifier.isOptional) {\n        return new _types.Option(registry, (0, _types.createClass)(registry, type), isEmpty ? null : (0, _types.createTypeUnsafe)(registry, type, [input], true));\n      }\n\n      return (0, _types.createTypeUnsafe)(registry, type, [isEmpty ? meta.fallback ? (0, _util.hexToU8a)(meta.fallback.toHex()) : undefined : input], true);\n    }\n  }, {\n    key: \"_formatStorageSet\",\n    value: function _formatStorageSet(registry, keys, changes) {\n      var _this7 = this;\n\n      // For StorageChangeSet, the changes has the [key, value] mappings\n      var withCache = keys.length !== 1; // multiple return values (via state.storage subscription), decode the values\n      // one at a time, all based on the query types. Three values can be returned -\n      //   - Codec - There is a valid value, non-empty\n      //   - null - The storage key is empty\n\n      return keys.reduce(function (results, key, index) {\n        try {\n          results.push(_this7._formatStorageSetEntry(registry, key, changes, withCache));\n        } catch (error) {\n          l.error(\"Unable to decode storage \".concat(key.section || 'unknown', \".\").concat(key.method || 'unknown', \": entry \").concat(index + 1, \"/\").concat(keys.length, \":\"), error.message);\n          throw error;\n        }\n\n        return results;\n      }, []);\n    }\n  }, {\n    key: \"_formatStorageSetEntry\",\n    value: function _formatStorageSetEntry(registry, key, changes, witCache) {\n      // Fallback to Raw (i.e. just the encoding) if we don't have a specific type\n      var type = key.outputType || 'Raw';\n      var hexKey = key.toHex();\n      var meta = key.meta || EMPTY_META;\n      var found = changes.find(function (_ref18) {\n        var _ref19 = _slicedToArray(_ref18, 1),\n            key = _ref19[0];\n\n        return key === hexKey;\n      }); // if we don't find the value, this is our fallback\n      //   - in the case of an array of values, fill the hole from the cache\n      //   - if a single result value, don't fill - it is not an update hole\n      //   - fallback to an empty option in all cases\n\n      var value = (0, _util.isUndefined)(found) ? witCache && (0, _classPrivateFieldLooseBase2.default)(this, _storageCache)[_storageCache].get(hexKey) || null : found[1];\n      var isEmpty = (0, _util.isNull)(value);\n      var input = isEmpty || this._treatAsHex(key) ? value : (0, _util.u8aToU8a)(value); // store the retrieved result - the only issue with this cache is that there is no\n      // clearing of it, so very long running processes (not just a couple of hours, longer)\n      // will increase memory beyond what is allowed.\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _storageCache)[_storageCache].set(hexKey, value);\n\n      if (meta.modifier.isOptional) {\n        return new _types.Option(registry, (0, _types.createClass)(registry, type), isEmpty ? null : (0, _types.createTypeUnsafe)(registry, type, [input], true));\n      }\n\n      return (0, _types.createTypeUnsafe)(registry, type, [isEmpty ? meta.fallback ? (0, _util.hexToU8a)(meta.fallback.toHex()) : undefined : input], true);\n    }\n  }, {\n    key: \"isConnected\",\n    get: function get() {\n      return this.provider.isConnected;\n    }\n  }]);\n\n  return Rpc;\n}();\n\nexports.default = Rpc;","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/rpc-core/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_memoizee","_rxjs","_operators","_jsonrpc","_types","_util","_normalizer","_rxjs2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","l","logger","EMPTY_META","fallback","undefined","modifier","isOptional","type","asMap","linked","isTrue","isMap","logErrorMessage","method","error","params","inputs","map","name","join","message","_instanceId","_registryDefault","_getBlockRegistry","_storageCache","Rpc","instanceId","registry","provider","userRpc","writable","Map","mapping","sections","author","babe","chain","childstate","contracts","engine","grandpa","offchain","payment","rpc","state","syncstate","system","assert","isFunction","send","sectionNames","addUserInterfaces","connect","disconnect","registrySwap","includes","sectionName","_ref","_ref2","section","entries","_createInterface","methods","endpoint","has","reduce","exposed","def","isSubscription","pubsub","jsonrpc","set","_createMethodSubscribe","_createMethodSend","creator","memoized","normalizer","json","raw","rpcName","hashIndex","findIndex","isHistoric","cacheIndex","isCached","callWithRegistry","outputAs","values","hash","_formatInputs","param","toJSON","data","_formatOutput","createType","isDelayed","Observable","observer","then","next","complete","catch","_memoized","delete","pipe","publishReplay","refCountDelay","refCount","_memomize","errorHandler","paramsJson","subName","subType","update","Promise","resolve","reject","subscribe","updateType","subMethod","unsubMethod","unsubName","subscriptionPromise","result","_createSubscriber","_memoized2","subscriptionId","isNull","unsubscribe","drr","reqArgCount","optText","input","index","createTypeUnsafe","toHex","_formatStorageData","_formatStorageSet","changes","mapped","block","outputType","meta","isEmpty","_treatAsHex","u8aToU8a","Option","createClass","hexToU8a","withCache","results","_formatStorageSetEntry","witCache","hexKey","found","find","isUndefined","get","isConnected"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _memoizee = _interopRequireDefault(require(\"memoizee\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _jsonrpc = _interopRequireDefault(require(\"@polkadot/types/interfaces/jsonrpc\"));\n\nvar _types = require(\"@polkadot/types\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _normalizer = _interopRequireDefault(require(\"./normalizer\"));\n\nvar _rxjs2 = require(\"./rxjs\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst l = (0, _util.logger)('rpc-core');\nconst EMPTY_META = {\n  fallback: undefined,\n  modifier: {\n    isOptional: true\n  },\n  type: {\n    asMap: {\n      linked: {\n        isTrue: false\n      }\n    },\n    isMap: false\n  }\n}; // utility method to create a nicely-formatted error\n\n/** @internal */\n\nfunction logErrorMessage(method, {\n  params,\n  type\n}, error) {\n  const inputs = params.map(({\n    isOptional,\n    name,\n    type\n  }) => `${name}${isOptional ? '?' : ''}: ${type}`).join(', ');\n  l.error(`${method}(${inputs}): ${type}:: ${error.message}`);\n}\n/**\n * @name Rpc\n * @summary The API may use a HTTP or WebSockets provider.\n * @description It allows for querying a Polkadot Client Node.\n * WebSockets provider is recommended since HTTP provider only supports basic querying.\n *\n * ```mermaid\n * graph LR;\n *   A[Api] --> |WebSockets| B[WsProvider];\n *   B --> |endpoint| C[ws://127.0.0.1:9944]\n * ```\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Rpc from '@polkadot/rpc-core';\n * import WsProvider from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const rpc = new Rpc(provider);\n * ```\n */\n\n\nvar _instanceId = (0, _classPrivateFieldLooseKey2.default)(\"instanceId\");\n\nvar _registryDefault = (0, _classPrivateFieldLooseKey2.default)(\"registryDefault\");\n\nvar _getBlockRegistry = (0, _classPrivateFieldLooseKey2.default)(\"getBlockRegistry\");\n\nvar _storageCache = (0, _classPrivateFieldLooseKey2.default)(\"storageCache\");\n\nclass Rpc {\n  // Ok, this is quite horrible - we really should not be using the ! here, but we are actually assigning\n  // these via the createInterfaces inside the constructor. However... this is not quite visible. The reason\n  // why we don't do for individual assignments is to allow user-defined RPCs to also be defined\n\n  /**\n   * @constructor\n   * Default constructor for the Api Object\n   * @param  {ProviderInterface} provider An API provider using HTTP or WebSocket\n   */\n  constructor(instanceId, registry, provider, userRpc = {}) {\n    Object.defineProperty(this, _instanceId, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registryDefault, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _getBlockRegistry, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _storageCache, {\n      writable: true,\n      value: new Map()\n    });\n    this.mapping = new Map();\n    this.provider = void 0;\n    this.sections = [];\n    this.author = void 0;\n    this.babe = void 0;\n    this.chain = void 0;\n    this.childstate = void 0;\n    this.contracts = void 0;\n    this.engine = void 0;\n    this.grandpa = void 0;\n    this.offchain = void 0;\n    this.payment = void 0;\n    this.rpc = void 0;\n    this.state = void 0;\n    this.syncstate = void 0;\n    this.system = void 0;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    (0, _util.assert)(provider && (0, _util.isFunction)(provider.send), 'Expected Provider to API create');\n    (0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId] = instanceId;\n    (0, _classPrivateFieldLooseBase2.default)(this, _registryDefault)[_registryDefault] = registry;\n    this.provider = provider;\n    const sectionNames = Object.keys(_jsonrpc.default); // these are the base keys (i.e. part of jsonrpc)\n\n    this.sections.push(...sectionNames);\n    this.addUserInterfaces(userRpc);\n  }\n  /**\n   * @description Returns the connected status of a provider\n   */\n\n\n  get isConnected() {\n    return this.provider.isConnected;\n  }\n  /**\n   * @description Manually connect from the attached provider\n   */\n\n\n  connect() {\n    return this.provider.connect();\n  }\n  /**\n   * @description Manually disconnect from the attached provider\n   */\n\n\n  disconnect() {\n    return this.provider.disconnect();\n  }\n  /**\n   * @description Sets a registry swap (typically from Api)\n   */\n\n\n  setRegistrySwap(registrySwap) {\n    (0, _classPrivateFieldLooseBase2.default)(this, _getBlockRegistry)[_getBlockRegistry] = registrySwap;\n  }\n\n  addUserInterfaces(userRpc) {\n    // add any extra user-defined sections\n    this.sections.push(...Object.keys(userRpc).filter(key => !this.sections.includes(key))); // decorate the sections with base and user methods\n\n    this.sections.forEach(sectionName => {\n      var _ref, _ref2;\n\n      (_ref = this)[_ref2 = sectionName] || (_ref[_ref2] = {});\n      const section = this[sectionName];\n      Object.entries(_objectSpread(_objectSpread({}, this._createInterface(sectionName, _jsonrpc.default[sectionName] || {})), this._createInterface(sectionName, userRpc[sectionName] || {}))).forEach(([key, value]) => {\n        section[key] || (section[key] = value);\n      });\n    });\n  }\n\n  _createInterface(section, methods) {\n    return Object.entries(methods).filter(([method, {\n      endpoint\n    }]) => !this.mapping.has(endpoint || `${section}_${method}`)).reduce((exposed, [method, {\n      endpoint\n    }]) => {\n      const def = methods[method];\n      const isSubscription = !!def.pubsub;\n      const jsonrpc = endpoint || `${section}_${method}`;\n      this.mapping.set(jsonrpc, _objectSpread(_objectSpread({}, def), {}, {\n        isSubscription,\n        jsonrpc,\n        method,\n        section\n      })); // FIXME Remove any here\n      // To do so, remove `RpcInterfaceMethod` from './types.ts', and refactor\n      // every method inside this class to take:\n      // `<S extends keyof RpcInterface, M extends keyof RpcInterface[S]>`\n      // Not doing so, because it makes this class a little bit less readable,\n      // and leaving it as-is doesn't harm much\n\n      exposed[method] = isSubscription ? this._createMethodSubscribe(section, method, def) : this._createMethodSend(section, method, def);\n      return exposed;\n    }, {});\n  }\n\n  _memomize(creator) {\n    const memoized = (0, _memoizee.default)(creator('scale'), {\n      // Dynamic length for argument\n      length: false,\n      // Normalize args so that different args that should be cached\n      // together are cached together.\n      // E.g.: `query.my.method('abc') === query.my.method(createType('AccountId', 'abc'));`\n      normalizer: (0, _normalizer.default)((0, _classPrivateFieldLooseBase2.default)(this, _instanceId)[_instanceId])\n    });\n    memoized.json = creator('json');\n    memoized.raw = creator('raw');\n    return memoized;\n  }\n\n  _createMethodSend(section, method, def) {\n    const rpcName = def.endpoint || `${section}_${method}`;\n    const hashIndex = def.params.findIndex(({\n      isHistoric\n    }) => isHistoric);\n    const cacheIndex = def.params.findIndex(({\n      isCached\n    }) => isCached);\n    let memoized = null; // execute the RPC call, doing a registry swap for historic as applicable\n\n    const callWithRegistry = async (outputAs, values) => {\n      const hash = hashIndex === -1 ? undefined : values[hashIndex];\n      const {\n        registry\n      } = hash && (0, _classPrivateFieldLooseBase2.default)(this, _getBlockRegistry)[_getBlockRegistry] ? await (0, _classPrivateFieldLooseBase2.default)(this, _getBlockRegistry)[_getBlockRegistry](hash) : {\n        registry: (0, _classPrivateFieldLooseBase2.default)(this, _registryDefault)[_registryDefault]\n      };\n\n      const params = this._formatInputs(registry, def, values);\n\n      const data = await this.provider.send(rpcName, params.map(param => param.toJSON()));\n      return outputAs === 'scale' ? this._formatOutput(registry, method, def, params, data) : registry.createType(outputAs === 'raw' ? 'Raw' : 'Json', data);\n    };\n\n    const creator = outputAs => (...values) => {\n      const isDelayed = hashIndex !== -1 && !!values[hashIndex] || cacheIndex !== -1 && !!values[cacheIndex];\n      return new _rxjs.Observable(observer => {\n        callWithRegistry(outputAs, values).then(value => {\n          observer.next(value);\n          observer.complete();\n        }).catch(error => {\n          logErrorMessage(method, def, error);\n          observer.error(error);\n          observer.complete();\n        });\n        return () => {\n          var _memoized;\n\n          // delete old results from cache\n          (_memoized = memoized) === null || _memoized === void 0 ? void 0 : _memoized.delete(...values);\n        };\n      }).pipe((0, _operators.publishReplay)(1), // create a Replay(1)\n      isDelayed ? (0, _rxjs2.refCountDelay)() // Unsubscribe after delay\n      : (0, _operators.refCount)());\n    };\n\n    memoized = this._memomize(creator);\n    return memoized;\n  } // create a subscriptor, it subscribes once and resolves with the id as subscribe\n\n\n  _createSubscriber({\n    paramsJson,\n    subName,\n    subType,\n    update\n  }, errorHandler) {\n    return new Promise((resolve, reject) => {\n      this.provider.subscribe(subType, subName, paramsJson, update).then(resolve).catch(error => {\n        errorHandler(error);\n        reject(error);\n      });\n    });\n  }\n\n  _createMethodSubscribe(section, method, def) {\n    const [updateType, subMethod, unsubMethod] = def.pubsub;\n    const subName = `${section}_${subMethod}`;\n    const unsubName = `${section}_${unsubMethod}`;\n    const subType = `${section}_${updateType}`;\n    let memoized = null;\n\n    const creator = outputAs => (...values) => {\n      return new _rxjs.Observable(observer => {\n        // Have at least an empty promise, as used in the unsubscribe\n        let subscriptionPromise = Promise.resolve(null);\n\n        const registry = (0, _classPrivateFieldLooseBase2.default)(this, _registryDefault)[_registryDefault];\n\n        const errorHandler = error => {\n          logErrorMessage(method, def, error);\n          observer.error(error);\n        };\n\n        try {\n          const params = this._formatInputs(registry, def, values);\n\n          const paramsJson = params.map(param => param.toJSON());\n\n          const update = (error, result) => {\n            if (error) {\n              logErrorMessage(method, def, error);\n              return;\n            }\n\n            try {\n              observer.next(outputAs === 'scale' ? this._formatOutput(registry, method, def, params, result) : registry.createType(outputAs === 'raw' ? 'Raw' : 'Json', result));\n            } catch (error) {\n              observer.error(error);\n            }\n          };\n\n          subscriptionPromise = this._createSubscriber({\n            paramsJson,\n            subName,\n            subType,\n            update\n          }, errorHandler);\n        } catch (error) {\n          errorHandler(error);\n        } // Teardown logic\n\n\n        return () => {\n          var _memoized2;\n\n          // Delete from cache, so old results don't hang around\n          (_memoized2 = memoized) === null || _memoized2 === void 0 ? void 0 : _memoized2.delete(...values); // Unsubscribe from provider\n\n          subscriptionPromise.then(subscriptionId => (0, _util.isNull)(subscriptionId) ? Promise.resolve(false) : this.provider.unsubscribe(subType, unsubName, subscriptionId)).catch(error => logErrorMessage(method, def, error));\n        };\n      }).pipe((0, _rxjs2.drr)());\n    };\n\n    memoized = this._memomize(creator);\n    return memoized;\n  }\n\n  _formatInputs(registry, def, inputs) {\n    const reqArgCount = def.params.filter(({\n      isOptional\n    }) => !isOptional).length;\n    const optText = reqArgCount === def.params.length ? '' : ` (${def.params.length - reqArgCount} optional)`;\n    (0, _util.assert)(inputs.length >= reqArgCount && inputs.length <= def.params.length, `Expected ${def.params.length} parameters${optText}, ${inputs.length} found instead`);\n    return inputs.map((input, index) => (0, _types.createTypeUnsafe)(registry, def.params[index].type, [input]));\n  }\n\n  _treatAsHex(key) {\n    // :code is problematic - it does not have the length attached, which is\n    // unlike all other storage entries where it is indeed properly encoded\n    return ['0x3a636f6465'].includes(key.toHex());\n  }\n\n  _formatOutput(registry, method, rpc, params, result) {\n    if (rpc.type === 'StorageData') {\n      const key = params[0];\n\n      try {\n        return this._formatStorageData(registry, key, result);\n      } catch (error) {\n        l.error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}:`, error.message);\n        throw error;\n      }\n    } else if (rpc.type === 'StorageChangeSet') {\n      const keys = params[0];\n      return keys ? this._formatStorageSet(registry, keys, result.changes) : registry.createType('StorageChangeSet', result);\n    } else if (rpc.type === 'Vec<StorageChangeSet>') {\n      const mapped = result.map(({\n        block,\n        changes\n      }) => [registry.createType('Hash', block), this._formatStorageSet(registry, params[0], changes)]); // we only query at a specific block, not a range - flatten\n\n      return method === 'queryStorageAt' ? mapped[0][1] : mapped;\n    }\n\n    return (0, _types.createTypeUnsafe)(registry, rpc.type, [result]);\n  }\n\n  _formatStorageData(registry, key, value) {\n    // single return value (via state.getStorage), decode the value based on the\n    // outputType that we have specified. Fallback to Raw on nothing\n    const type = key.outputType || 'Raw';\n    const meta = key.meta || EMPTY_META;\n    const isEmpty = (0, _util.isNull)(value); // we convert to Uint8Array since it maps to the raw encoding, all\n    // data will be correctly encoded (incl. numbers, excl. :code)\n\n    const input = isEmpty ? null : this._treatAsHex(key) ? value : (0, _util.u8aToU8a)(value);\n\n    if (meta.modifier.isOptional) {\n      return new _types.Option(registry, (0, _types.createClass)(registry, type), isEmpty ? null : (0, _types.createTypeUnsafe)(registry, type, [input], true));\n    }\n\n    return (0, _types.createTypeUnsafe)(registry, type, [isEmpty ? meta.fallback ? (0, _util.hexToU8a)(meta.fallback.toHex()) : undefined : input], true);\n  }\n\n  _formatStorageSet(registry, keys, changes) {\n    // For StorageChangeSet, the changes has the [key, value] mappings\n    const withCache = keys.length !== 1; // multiple return values (via state.storage subscription), decode the values\n    // one at a time, all based on the query types. Three values can be returned -\n    //   - Codec - There is a valid value, non-empty\n    //   - null - The storage key is empty\n\n    return keys.reduce((results, key, index) => {\n      try {\n        results.push(this._formatStorageSetEntry(registry, key, changes, withCache));\n      } catch (error) {\n        l.error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}: entry ${index + 1}/${keys.length}:`, error.message);\n        throw error;\n      }\n\n      return results;\n    }, []);\n  }\n\n  _formatStorageSetEntry(registry, key, changes, witCache) {\n    // Fallback to Raw (i.e. just the encoding) if we don't have a specific type\n    const type = key.outputType || 'Raw';\n    const hexKey = key.toHex();\n    const meta = key.meta || EMPTY_META;\n    const found = changes.find(([key]) => key === hexKey); // if we don't find the value, this is our fallback\n    //   - in the case of an array of values, fill the hole from the cache\n    //   - if a single result value, don't fill - it is not an update hole\n    //   - fallback to an empty option in all cases\n\n    const value = (0, _util.isUndefined)(found) ? witCache && (0, _classPrivateFieldLooseBase2.default)(this, _storageCache)[_storageCache].get(hexKey) || null : found[1];\n    const isEmpty = (0, _util.isNull)(value);\n    const input = isEmpty || this._treatAsHex(key) ? value : (0, _util.u8aToU8a)(value); // store the retrieved result - the only issue with this cache is that there is no\n    // clearing of it, so very long running processes (not just a couple of hours, longer)\n    // will increase memory beyond what is allowed.\n\n    (0, _classPrivateFieldLooseBase2.default)(this, _storageCache)[_storageCache].set(hexKey, value);\n\n    if (meta.modifier.isOptional) {\n      return new _types.Option(registry, (0, _types.createClass)(registry, type), isEmpty ? null : (0, _types.createTypeUnsafe)(registry, type, [input], true));\n    }\n\n    return (0, _types.createTypeUnsafe)(registry, type, [isEmpty ? meta.fallback ? (0, _util.hexToU8a)(meta.fallback.toHex()) : undefined : input], true);\n  }\n\n}\n\nexports.default = Rpc;"]},"metadata":{},"sourceType":"script"}