{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateTypes;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _extractTypes = _interopRequireDefault(require(\"./extractTypes\"));\n\nvar _flattenUniq = _interopRequireDefault(require(\"./flattenUniq\")); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst l = (0, _util.logger)('metadata');\n/** @internal */\n\nfunction validateTypes(registry, types, throwError) {\n  const missing = (0, _flattenUniq.default)((0, _extractTypes.default)(types)).filter(type => !registry.hasType(type));\n\n  if (missing.length !== 0) {\n    const message = `Unknown types found, no types for ${missing.join(', ')}`;\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      l.warn(message);\n    }\n  }\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/metadata/util/validateTypes.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","validateTypes","_util","_extractTypes","_flattenUniq","l","logger","registry","types","throwError","missing","filter","type","hasType","length","message","join","Error","warn"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,aAAa,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,IAAIS,YAAY,GAAGV,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC,C,CAEA;AACA;;;AACA,MAAMU,CAAC,GAAG,CAAC,GAAGH,KAAK,CAACI,MAAV,EAAkB,UAAlB,CAAV;AACA;;AAEA,SAASL,aAAT,CAAuBM,QAAvB,EAAiCC,KAAjC,EAAwCC,UAAxC,EAAoD;AAClD,QAAMC,OAAO,GAAG,CAAC,GAAGN,YAAY,CAACJ,OAAjB,EAA0B,CAAC,GAAGG,aAAa,CAACH,OAAlB,EAA2BQ,KAA3B,CAA1B,EAA6DG,MAA7D,CAAoEC,IAAI,IAAI,CAACL,QAAQ,CAACM,OAAT,CAAiBD,IAAjB,CAA7E,CAAhB;;AAEA,MAAIF,OAAO,CAACI,MAAR,KAAmB,CAAvB,EAA0B;AACxB,UAAMC,OAAO,GAAI,qCAAoCL,OAAO,CAACM,IAAR,CAAa,IAAb,CAAmB,EAAxE;;AAEA,QAAIP,UAAJ,EAAgB;AACd,YAAM,IAAIQ,KAAJ,CAAUF,OAAV,CAAN;AACD,KAFD,MAEO;AACLV,MAAAA,CAAC,CAACa,IAAF,CAAOH,OAAP;AACD;AACF;AACF","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateTypes;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _extractTypes = _interopRequireDefault(require(\"./extractTypes\"));\n\nvar _flattenUniq = _interopRequireDefault(require(\"./flattenUniq\"));\n\n// Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst l = (0, _util.logger)('metadata');\n/** @internal */\n\nfunction validateTypes(registry, types, throwError) {\n  const missing = (0, _flattenUniq.default)((0, _extractTypes.default)(types)).filter(type => !registry.hasType(type));\n\n  if (missing.length !== 0) {\n    const message = `Unknown types found, no types for ${missing.join(', ')}`;\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      l.warn(message);\n    }\n  }\n}"]},"metadata":{},"sourceType":"script"}