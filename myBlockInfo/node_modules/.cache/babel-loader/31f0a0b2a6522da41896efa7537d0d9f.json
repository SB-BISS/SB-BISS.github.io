{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = schnorrkelSign;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name schnorrkelSign\n * @description Returns message signature of `message`, using the supplied pair\n */\n\n\nfunction schnorrkelSign(message, {\n  publicKey,\n  secretKey\n}) {\n  (0, _util.assert)((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) === 32, 'Expected a valid publicKey, 32-bytes');\n  (0, _util.assert)((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Expected a valid secretKey, 64-bytes');\n  const messageU8a = (0, _util.u8aToU8a)(message);\n  return (0, _wasmCrypto.sr25519Sign)(publicKey, secretKey, messageU8a);\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api-derive/node_modules/@polkadot/util-crypto/schnorrkel/sign.js"],"names":["Object","defineProperty","exports","value","default","schnorrkelSign","_util","require","_wasmCrypto","message","publicKey","secretKey","assert","length","messageU8a","u8aToU8a","sr25519Sign"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBI,OAAxB,EAAiC;AAC/BC,EAAAA,SAD+B;AAE/BC,EAAAA;AAF+B,CAAjC,EAGG;AACD,GAAC,GAAGL,KAAK,CAACM,MAAV,EAAkB,CAACF,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACG,MAAjE,MAA6E,EAA/F,EAAmG,sCAAnG;AACA,GAAC,GAAGP,KAAK,CAACM,MAAV,EAAkB,CAACD,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACE,MAAjE,MAA6E,EAA/F,EAAmG,sCAAnG;AACA,QAAMC,UAAU,GAAG,CAAC,GAAGR,KAAK,CAACS,QAAV,EAAoBN,OAApB,CAAnB;AACA,SAAO,CAAC,GAAGD,WAAW,CAACQ,WAAhB,EAA6BN,SAA7B,EAAwCC,SAAxC,EAAmDG,UAAnD,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = schnorrkelSign;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name schnorrkelSign\n * @description Returns message signature of `message`, using the supplied pair\n */\nfunction schnorrkelSign(message, {\n  publicKey,\n  secretKey\n}) {\n  (0, _util.assert)((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) === 32, 'Expected a valid publicKey, 32-bytes');\n  (0, _util.assert)((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Expected a valid secretKey, 64-bytes');\n  const messageU8a = (0, _util.u8aToU8a)(message);\n  return (0, _wasmCrypto.sr25519Sign)(publicKey, secretKey, messageU8a);\n}"]},"metadata":{},"sourceType":"script"}