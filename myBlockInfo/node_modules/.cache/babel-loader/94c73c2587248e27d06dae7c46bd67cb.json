{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _U8aFixed = _interopRequireDefault(require(\"../codec/U8aFixed\"));\n\nvar _Bool = _interopRequireDefault(require(\"../primitive/Bool\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction\n\n\nvar AYE_BITS = 128;\nvar NAY_BITS = 0;\nvar CON_MASK = 127;\nvar DEF_CONV = 0; // the default conviction, None\n\n/** @internal */\n\nfunction decodeVoteBool(value) {\n  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteU8a(value) {\n  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteType(registry, value) {\n  var vote = new _Bool.default(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS;\n  var conviction = registry.createType('Conviction', value.conviction || DEF_CONV);\n  return new Uint8Array([vote | conviction.index]);\n}\n/** @internal */\n\n\nfunction decodeVote(registry, value) {\n  if ((0, _util.isUndefined)(value) || value instanceof Boolean || (0, _util.isBoolean)(value)) {\n    return decodeVoteBool(new _Bool.default(registry, value).isTrue);\n  } else if ((0, _util.isNumber)(value)) {\n    return decodeVoteBool(value < 0);\n  } else if ((0, _util.isU8a)(value)) {\n    return decodeVoteU8a(value);\n  }\n\n  return decodeVoteType(registry, value);\n}\n/**\n * @name Vote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\n\n\nvar Vote = /*#__PURE__*/function (_U8aFixed$default) {\n  _inherits(Vote, _U8aFixed$default);\n\n  var _super = _createSuper(Vote);\n\n  function Vote(registry, value) {\n    var _this;\n\n    _classCallCheck(this, Vote);\n\n    // decoded is just 1 byte\n    // Aye: Most Significant Bit\n    // Conviction: 0000 - 0101\n    var decoded = decodeVote(registry, value);\n    _this = _super.call(this, registry, decoded, 8);\n    _this._aye = void 0;\n    _this._conviction = void 0;\n    _this._aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n    _this._conviction = _this.registry.createType('Conviction', decoded[0] & CON_MASK);\n    return _this;\n  }\n  /**\n   * @description returns a V2 conviction\n   */\n\n\n  _createClass(Vote, [{\n    key: \"toHuman\",\n\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    value: function toHuman(isExpanded) {\n      return {\n        conviction: this.conviction.toHuman(isExpanded),\n        vote: this.isAye ? 'Aye' : 'Nay'\n      };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return 'Vote';\n    }\n  }, {\n    key: \"conviction\",\n    get: function get() {\n      return this._conviction;\n    }\n    /**\n     * @description true if the wrapped value is a positive vote\n     */\n\n  }, {\n    key: \"isAye\",\n    get: function get() {\n      return this._aye;\n    }\n    /**\n     * @description true if the wrapped value is a negative vote\n     */\n\n  }, {\n    key: \"isNay\",\n    get: function get() {\n      return !this.isAye;\n    }\n  }]);\n\n  return Vote;\n}(_U8aFixed.default);\n\nexports.default = Vote;","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/types/generic/Vote.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_util","_U8aFixed","_Bool","AYE_BITS","NAY_BITS","CON_MASK","DEF_CONV","decodeVoteBool","Uint8Array","decodeVoteU8a","length","subarray","decodeVoteType","registry","vote","aye","isTrue","conviction","createType","index","decodeVote","isUndefined","Boolean","isBoolean","isNumber","isU8a","Vote","decoded","_aye","_conviction","isExpanded","toHuman","isAye"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _U8aFixed = _interopRequireDefault(require(\"../codec/U8aFixed\"));\n\nvar _Bool = _interopRequireDefault(require(\"../primitive/Bool\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction\nconst AYE_BITS = 0b10000000;\nconst NAY_BITS = 0b00000000;\nconst CON_MASK = 0b01111111;\nconst DEF_CONV = 0b00000000; // the default conviction, None\n\n/** @internal */\n\nfunction decodeVoteBool(value) {\n  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteU8a(value) {\n  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteType(registry, value) {\n  const vote = new _Bool.default(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS;\n  const conviction = registry.createType('Conviction', value.conviction || DEF_CONV);\n  return new Uint8Array([vote | conviction.index]);\n}\n/** @internal */\n\n\nfunction decodeVote(registry, value) {\n  if ((0, _util.isUndefined)(value) || value instanceof Boolean || (0, _util.isBoolean)(value)) {\n    return decodeVoteBool(new _Bool.default(registry, value).isTrue);\n  } else if ((0, _util.isNumber)(value)) {\n    return decodeVoteBool(value < 0);\n  } else if ((0, _util.isU8a)(value)) {\n    return decodeVoteU8a(value);\n  }\n\n  return decodeVoteType(registry, value);\n}\n/**\n * @name Vote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\n\n\nclass Vote extends _U8aFixed.default {\n  constructor(registry, value) {\n    // decoded is just 1 byte\n    // Aye: Most Significant Bit\n    // Conviction: 0000 - 0101\n    const decoded = decodeVote(registry, value);\n    super(registry, decoded, 8);\n    this._aye = void 0;\n    this._conviction = void 0;\n    this._aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n    this._conviction = this.registry.createType('Conviction', decoded[0] & CON_MASK);\n  }\n  /**\n   * @description returns a V2 conviction\n   */\n\n\n  get conviction() {\n    return this._conviction;\n  }\n  /**\n   * @description true if the wrapped value is a positive vote\n   */\n\n\n  get isAye() {\n    return this._aye;\n  }\n  /**\n   * @description true if the wrapped value is a negative vote\n   */\n\n\n  get isNay() {\n    return !this.isAye;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return {\n      conviction: this.conviction.toHuman(isExpanded),\n      vote: this.isAye ? 'Aye' : 'Nay'\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Vote';\n  }\n\n}\n\nexports.default = Vote;"]},"metadata":{},"sourceType":"script"}