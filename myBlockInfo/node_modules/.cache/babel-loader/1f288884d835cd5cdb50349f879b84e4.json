{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _get = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _slicedToArray = require(\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utils = require(\"./utils\"); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\n\n\nfunction decodeStructFromObject(registry, Types, value, jsonMap) {\n  var jsonObj;\n  return Object.keys(Types).reduce(function (raw, key, index) {\n    // The key in the JSON can be snake_case (or other cases), but in our\n    // Types, result or any other maps, it's camelCase\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    var jsonKey = jsonMap.get(key) && !value[key] ? jsonMap.get(key) : key;\n\n    try {\n      if (Array.isArray(value)) {\n        // TS2322: Type 'Codec' is not assignable to type 'T[keyof S]'.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n        raw[key] = value[index] instanceof Types[key] ? value[index] : new Types[key](registry, value[index]);\n      } else if (value instanceof Map) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        var mapped = value.get(jsonKey); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n        raw[key] = mapped instanceof Types[key] ? mapped : new Types[key](registry, mapped);\n      } else if ((0, _util.isObject)(value)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        var assign = value[jsonKey];\n\n        if ((0, _util.isUndefined)(assign)) {\n          if ((0, _util.isUndefined)(jsonObj)) {\n            jsonObj = Object.entries(value).reduce(function (all, _ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                  key = _ref2[0],\n                  value = _ref2[1];\n\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              all[(0, _util.stringCamelCase)(key)] = value;\n              return all;\n            }, {});\n          } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\n          assign = jsonObj[jsonKey];\n        } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\n\n        raw[key] = assign instanceof Types[key] ? assign : new Types[key](registry, assign);\n      } else {\n        throw new Error(\"Cannot decode value \".concat(JSON.stringify(value)));\n      }\n    } catch (error) {\n      var type = Types[key].name;\n\n      try {\n        type = new Types[key](registry).toRawType();\n      } catch (error) {// ignore\n      }\n\n      throw new Error(\"Struct: failed on \".concat(jsonKey, \": \").concat(type, \":: \").concat(error.message));\n    }\n\n    return raw;\n  }, {});\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param Types - Types definition.\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - object with `{ key1: value1, key2: value2 }`, assuming `key1` and `key2`\n * are also keys in `Types`\n * - array with `[value1, value2]` assuming the array has the same length as\n * `Object.keys(Types)`\n * @param jsonMap\n * @internal\n */\n\n\nfunction decodeStruct(registry, Types, value, jsonMap) {\n  if ((0, _util.isHex)(value)) {\n    return decodeStruct(registry, Types, (0, _util.hexToU8a)(value), jsonMap);\n  } else if ((0, _util.isU8a)(value)) {\n    var values = (0, _utils.decodeU8a)(registry, value, Object.values(Types)); // Transform array of values to {key: value} mapping\n\n    return Object.keys(Types).reduce(function (raw, key, index) {\n      // TS2322: Type 'Codec' is not assignable to type 'T[keyof S]'.\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      raw[key] = values[index];\n      return raw;\n    }, {});\n  } else if (!value) {\n    return {};\n  } // We assume from here that value is a JS object (Array, Map, Object)\n\n\n  return decodeStructFromObject(registry, Types, value, jsonMap);\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\n\n\nvar _jsonMap = (0, _classPrivateFieldLooseKey2.default)(\"jsonMap\");\n\nvar _Types = (0, _classPrivateFieldLooseKey2.default)(\"Types\");\n\nvar Struct = /*#__PURE__*/function (_Map) {\n  _inherits(Struct, _Map);\n\n  var _super = _createSuper(Struct);\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  function Struct(registry, Types) {\n    var _this;\n\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var jsonMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Map();\n\n    _classCallCheck(this, Struct);\n\n    _this = _super.call(this, Object.entries(decodeStruct(registry, (0, _utils.mapToTypeMap)(registry, Types), value, jsonMap)));\n    _this.registry = void 0;\n    Object.defineProperty(_assertThisInitialized(_this), _jsonMap, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _Types, {\n      writable: true,\n      value: void 0\n    });\n    _this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _jsonMap)[_jsonMap] = jsonMap;\n    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _Types)[_Types] = (0, _utils.mapToTypeMap)(registry, Types);\n    return _this;\n  }\n\n  _createClass(Struct, [{\n    key: \"eq\",\n\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    value: function eq(other) {\n      return (0, _utils.compareMap)(this, other);\n    }\n    /**\n     * @description Returns a specific names entry in the structure\n     * @param name The name of the entry to retrieve\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      return _get(_getPrototypeOf(Struct.prototype), \"get\", this).call(this, name);\n    }\n    /**\n     * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n     */\n\n  }, {\n    key: \"getAtIndex\",\n    value: function getAtIndex(index) {\n      return this.toArray()[index];\n    }\n    /**\n     * @description Converts the Object to an standard JavaScript Array\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return _toConsumableArray(this.values());\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return (0, _util.u8aToHex)(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman(isExtended) {\n      var _this2 = this;\n\n      return _toConsumableArray(this.keys()).reduce(function (json, key) {\n        var value = _this2.get(key);\n\n        json[key] = value && value.toHuman(isExtended);\n        return json;\n      }, {});\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this3 = this;\n\n      return _toConsumableArray(this.keys()).reduce(function (json, key) {\n        var jsonKey = (0, _classPrivateFieldLooseBase2.default)(_this3, _jsonMap)[_jsonMap].get(key) || key;\n\n        var value = _this3.get(key);\n\n        json[jsonKey] = value && value.toJSON();\n        return json;\n      }, {});\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return JSON.stringify(Struct.typesToMap(this.registry, (0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types]));\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      // we have keyof S here, cast to string to make it compatible with isBare\n      var entries = _toConsumableArray(this.entries());\n\n      return (0, _util.u8aConcat).apply(void 0, _toConsumableArray(entries // eslint-disable-next-line @typescript-eslint/unbound-method\n      .filter(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            value = _ref4[1];\n\n        return (0, _util.isFunction)(value === null || value === void 0 ? void 0 : value.toU8a);\n      }).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            key = _ref6[0],\n            value = _ref6[1];\n\n        return value.toU8a(!isBare || (0, _util.isBoolean)(isBare) ? isBare : isBare[key]);\n      })));\n    }\n  }, {\n    key: \"defKeys\",\n\n    /**\n     * @description The available keys for this enum\n     */\n    get: function get() {\n      return Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types]);\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      var items = this.toArray();\n\n      for (var i = 0; i < items.length; i++) {\n        if (!items[i].isEmpty) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * @description Returns the Type description to sthe structure\n     */\n\n  }, {\n    key: \"Type\",\n    get: function get() {\n      var _this4 = this;\n\n      return Object.entries((0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types]).reduce(function (result, _ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            key = _ref8[0],\n            Type = _ref8[1];\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        result[key] = new Type(_this4.registry).toRawType();\n        return result;\n      }, {});\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n\n  }, {\n    key: \"encodedLength\",\n    get: function get() {\n      return this.toArray().reduce(function (length, entry) {\n        length += entry.encodedLength;\n        return length;\n      }, 0);\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this.registry.hash(this.toU8a());\n    }\n  }], [{\n    key: \"with\",\n    value: function _with(Types, jsonMap) {\n      return /*#__PURE__*/function (_Struct) {\n        _inherits(_class, _Struct);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          var _this5;\n\n          _classCallCheck(this, _class);\n\n          _this5 = _super2.call(this, registry, Types, value, jsonMap);\n          Object.keys(Types).forEach(function (key) {\n            (0, _util.isUndefined)(_this5[key]) && Object.defineProperty(_assertThisInitialized(_this5), key, {\n              enumerable: true,\n              get: function get() {\n                return _this5.get(key);\n              }\n            });\n          });\n          return _this5;\n        }\n\n        return _class;\n      }(Struct);\n    }\n  }, {\n    key: \"typesToMap\",\n    value: function typesToMap(registry, Types) {\n      return Object.entries(Types).reduce(function (result, _ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n            key = _ref10[0],\n            Type = _ref10[1];\n\n        result[key] = registry.getClassName(Type) || new Type(registry).toRawType();\n        return result;\n      }, {});\n    }\n  }]);\n\n  return Struct;\n}( /*#__PURE__*/_wrapNativeSuper(Map));\n\nexports.default = Struct;","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/types/codec/Struct.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_util","_utils","decodeStructFromObject","registry","Types","jsonMap","jsonObj","keys","reduce","raw","key","index","jsonKey","get","Array","isArray","Map","mapped","isObject","assign","isUndefined","entries","all","stringCamelCase","Error","JSON","stringify","error","type","name","toRawType","message","decodeStruct","isHex","hexToU8a","isU8a","values","decodeU8a","_jsonMap","_Types","Struct","mapToTypeMap","writable","other","compareMap","toArray","u8aToHex","toU8a","isExtended","json","toHuman","toJSON","typesToMap","isBare","u8aConcat","filter","isFunction","map","isBoolean","items","i","length","isEmpty","result","Type","entry","encodedLength","hash","forEach","enumerable","getClassName"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utils = require(\"./utils\");\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction decodeStructFromObject(registry, Types, value, jsonMap) {\n  let jsonObj;\n  return Object.keys(Types).reduce((raw, key, index) => {\n    // The key in the JSON can be snake_case (or other cases), but in our\n    // Types, result or any other maps, it's camelCase\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const jsonKey = jsonMap.get(key) && !value[key] ? jsonMap.get(key) : key;\n\n    try {\n      if (Array.isArray(value)) {\n        // TS2322: Type 'Codec' is not assignable to type 'T[keyof S]'.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n        raw[key] = value[index] instanceof Types[key] ? value[index] : new Types[key](registry, value[index]);\n      } else if (value instanceof Map) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const mapped = value.get(jsonKey); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n        raw[key] = mapped instanceof Types[key] ? mapped : new Types[key](registry, mapped);\n      } else if ((0, _util.isObject)(value)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        let assign = value[jsonKey];\n\n        if ((0, _util.isUndefined)(assign)) {\n          if ((0, _util.isUndefined)(jsonObj)) {\n            jsonObj = Object.entries(value).reduce((all, [key, value]) => {\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              all[(0, _util.stringCamelCase)(key)] = value;\n              return all;\n            }, {});\n          } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\n          assign = jsonObj[jsonKey];\n        } // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\n\n        raw[key] = assign instanceof Types[key] ? assign : new Types[key](registry, assign);\n      } else {\n        throw new Error(`Cannot decode value ${JSON.stringify(value)}`);\n      }\n    } catch (error) {\n      let type = Types[key].name;\n\n      try {\n        type = new Types[key](registry).toRawType();\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);\n    }\n\n    return raw;\n  }, {});\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param Types - Types definition.\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - object with `{ key1: value1, key2: value2 }`, assuming `key1` and `key2`\n * are also keys in `Types`\n * - array with `[value1, value2]` assuming the array has the same length as\n * `Object.keys(Types)`\n * @param jsonMap\n * @internal\n */\n\n\nfunction decodeStruct(registry, Types, value, jsonMap) {\n  if ((0, _util.isHex)(value)) {\n    return decodeStruct(registry, Types, (0, _util.hexToU8a)(value), jsonMap);\n  } else if ((0, _util.isU8a)(value)) {\n    const values = (0, _utils.decodeU8a)(registry, value, Object.values(Types)); // Transform array of values to {key: value} mapping\n\n    return Object.keys(Types).reduce((raw, key, index) => {\n      // TS2322: Type 'Codec' is not assignable to type 'T[keyof S]'.\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      raw[key] = values[index];\n      return raw;\n    }, {});\n  } else if (!value) {\n    return {};\n  } // We assume from here that value is a JS object (Array, Map, Object)\n\n\n  return decodeStructFromObject(registry, Types, value, jsonMap);\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\n\n\nvar _jsonMap = (0, _classPrivateFieldLooseKey2.default)(\"jsonMap\");\n\nvar _Types = (0, _classPrivateFieldLooseKey2.default)(\"Types\");\n\nclass Struct extends Map {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  constructor(registry, Types, value = {}, jsonMap = new Map()) {\n    super(Object.entries(decodeStruct(registry, (0, _utils.mapToTypeMap)(registry, Types), value, jsonMap)));\n    this.registry = void 0;\n    Object.defineProperty(this, _jsonMap, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _Types, {\n      writable: true,\n      value: void 0\n    });\n    this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(this, _jsonMap)[_jsonMap] = jsonMap;\n    (0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types] = (0, _utils.mapToTypeMap)(registry, Types);\n  }\n\n  static with(Types, jsonMap) {\n    return class extends Struct {\n      constructor(registry, value) {\n        super(registry, Types, value, jsonMap);\n        Object.keys(Types).forEach(key => {\n          (0, _util.isUndefined)(this[key]) && Object.defineProperty(this, key, {\n            enumerable: true,\n            get: () => this.get(key)\n          });\n        });\n      }\n\n    };\n  }\n\n  static typesToMap(registry, Types) {\n    return Object.entries(Types).reduce((result, [key, Type]) => {\n      result[key] = registry.getClassName(Type) || new Type(registry).toRawType();\n      return result;\n    }, {});\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defKeys() {\n    return Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types]);\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    const items = this.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (!items[i].isEmpty) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * @description Returns the Type description to sthe structure\n   */\n\n\n  get Type() {\n    return Object.entries((0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types]).reduce((result, [key, Type]) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      result[key] = new Type(this.registry).toRawType();\n      return result;\n    }, {});\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toArray().reduce((length, entry) => {\n      length += entry.encodedLength;\n      return length;\n    }, 0);\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return (0, _utils.compareMap)(this, other);\n  }\n  /**\n   * @description Returns a specific names entry in the structure\n   * @param name The name of the entry to retrieve\n   */\n\n\n  get(name) {\n    return super.get(name);\n  }\n  /**\n   * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n   */\n\n\n  getAtIndex(index) {\n    return this.toArray()[index];\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return [...this.values()];\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return (0, _util.u8aToHex)(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return [...this.keys()].reduce((json, key) => {\n      const value = this.get(key);\n      json[key] = value && value.toHuman(isExtended);\n      return json;\n    }, {});\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return [...this.keys()].reduce((json, key) => {\n      const jsonKey = (0, _classPrivateFieldLooseBase2.default)(this, _jsonMap)[_jsonMap].get(key) || key;\n      const value = this.get(key);\n      json[jsonKey] = value && value.toJSON();\n      return json;\n    }, {});\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return JSON.stringify(Struct.typesToMap(this.registry, (0, _classPrivateFieldLooseBase2.default)(this, _Types)[_Types]));\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    // we have keyof S here, cast to string to make it compatible with isBare\n    const entries = [...this.entries()];\n    return (0, _util.u8aConcat)(...entries // eslint-disable-next-line @typescript-eslint/unbound-method\n    .filter(([, value]) => (0, _util.isFunction)(value === null || value === void 0 ? void 0 : value.toU8a)).map(([key, value]) => value.toU8a(!isBare || (0, _util.isBoolean)(isBare) ? isBare : isBare[key])));\n  }\n\n}\n\nexports.default = Struct;"]},"metadata":{},"sourceType":"script"}