{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assert;\nexports.assertReturn = assertReturn;\n\nvar _function = _interopRequireDefault(require(\"./is/function\"));\n\nvar _undefined = _interopRequireDefault(require(\"./is/undefined\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error((0, _function.default)(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @summart Returns when the value is not undefined, otherwise throws assertion error\n */\n\n\nfunction assertReturn(value, message) {\n  assert(!(0, _undefined.default)(value), message);\n  return value;\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api/node_modules/@polkadot/util/assert.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","assert","assertReturn","_function","_undefined","condition","message","Error"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;AACAH,OAAO,CAACI,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAtC;;AAEA,IAAIS,UAAU,GAAGV,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAvC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,MAAT,CAAgBI,SAAhB,EAA2BC,OAA3B,EAAoC;AAClC,MAAI,CAACD,SAAL,EAAgB;AACd,UAAM,IAAIE,KAAJ,CAAU,CAAC,GAAGJ,SAAS,CAACH,OAAd,EAAuBM,OAAvB,IAAkCA,OAAO,EAAzC,GAA8CA,OAAxD,CAAN;AACD;AACF;AACD;AACA;AACA;AACA;;;AAGA,SAASJ,YAAT,CAAsBH,KAAtB,EAA6BO,OAA7B,EAAsC;AACpCL,EAAAA,MAAM,CAAC,CAAC,CAAC,GAAGG,UAAU,CAACJ,OAAf,EAAwBD,KAAxB,CAAF,EAAkCO,OAAlC,CAAN;AACA,SAAOP,KAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assert;\nexports.assertReturn = assertReturn;\n\nvar _function = _interopRequireDefault(require(\"./is/function\"));\n\nvar _undefined = _interopRequireDefault(require(\"./is/undefined\"));\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error((0, _function.default)(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @summart Returns when the value is not undefined, otherwise throws assertion error\n */\n\n\nfunction assertReturn(value, message) {\n  assert(!(0, _undefined.default)(value), message);\n  return value;\n}"]},"metadata":{},"sourceType":"script"}