{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proposal = proposal;\nexports.proposals = proposals;\n\nvar _collective = require(\"../collective\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction proposal(instanceId, api) {\n  return (0, _util.memo)(instanceId, (0, _collective.proposal)(instanceId, api));\n}\n\nfunction proposals(instanceId, api) {\n  return (0, _util.memo)(instanceId, (0, _collective.proposals)(instanceId, api));\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/@polkadot/api-derive/council/proposals.js"],"names":["Object","defineProperty","exports","value","proposal","proposals","_collective","require","_util","instanceId","api","memo"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASH,QAAT,CAAkBK,UAAlB,EAA8BC,GAA9B,EAAmC;AACjC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,CAAC,GAAGH,WAAW,CAACF,QAAhB,EAA0BK,UAA1B,EAAsCC,GAAtC,CAA5B,CAAP;AACD;;AAED,SAASL,SAAT,CAAmBI,UAAnB,EAA+BC,GAA/B,EAAoC;AAClC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,CAAC,GAAGH,WAAW,CAACD,SAAhB,EAA2BI,UAA3B,EAAuCC,GAAvC,CAA5B,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proposal = proposal;\nexports.proposals = proposals;\n\nvar _collective = require(\"../collective\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction proposal(instanceId, api) {\n  return (0, _util.memo)(instanceId, (0, _collective.proposal)(instanceId, api));\n}\n\nfunction proposals(instanceId, api) {\n  return (0, _util.memo)(instanceId, (0, _collective.proposals)(instanceId, api));\n}"]},"metadata":{},"sourceType":"script"}