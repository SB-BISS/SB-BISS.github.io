{"ast":null,"code":"var _jsxFileName = \"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Table } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [blockInfo, setBlockInfo] = useState();\n  useEffect(() => {\n    const unsubscribeAll = null;\n\n    const getInfo = async () => {\n      try {\n        api.rpc.chain.subscribeNewHeads(header => {\n          setBlockInfo(header);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    getInfo();\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.derive.chain, api.rpc.chain, blockInfo]);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      margin: '1rem 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }\n  }, \"Latest Block Information - Polkadot Network \"))), blockInfo && /*#__PURE__*/React.createElement(Table, {\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Block Info\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Data\"))), /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }, \"#Block Number\")), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, blockInfo.number.toNumber())), /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, \"#Hash\")), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, blockInfo.hash.toHuman())), /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }\n  }, \"#ParentHash\")), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, blockInfo.parentHash.toHuman())), /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }\n  }, \"#State Root\")), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, blockInfo.stateRoot.toHuman())), /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }, \"#Extrinsics Root\")), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, blockInfo.extrinsicsRoot.toHuman())))));\n}\n\nexport default function BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.system && api.rpc.chain && api.derive.chain && api.derive.chain.bestNumber && api.rpc.chain.getBlock && api.rpc.chain.subscribeNewHeads ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/src/BlockInfo.js"],"names":["React","useEffect","useState","Grid","Table","useSubstrate","Main","props","api","blockInfo","setBlockInfo","unsubscribeAll","getInfo","rpc","chain","subscribeNewHeads","header","e","console","error","derive","margin","number","toNumber","hash","toHuman","parentHash","stateRoot","extrinsicsRoot","BlockInfo","system","bestNumber","getBlock"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Grid, Table } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [blockInfo, setBlockInfo] = useState()\n\n  useEffect(() => {\n    const unsubscribeAll = null\n    const getInfo = async () => {\n      try {\n        api.rpc.chain.subscribeNewHeads((header) => {\n          setBlockInfo(header)\n        })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getInfo()\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [api.derive.chain, api.rpc.chain, blockInfo])\n\n  return (\n    <Grid.Column style={{ margin: '1rem 0' }}>\n      <h1><b><i>Latest Block Information - Polkadot Network </i></b></h1>\n      {blockInfo && (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Block Info</Table.HeaderCell>\n              <Table.HeaderCell>Data</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell><b>#Block Number</b></Table.Cell>\n              <Table.Cell>{blockInfo.number.toNumber()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#Hash</b></Table.Cell>\n              <Table.Cell>{blockInfo.hash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#ParentHash</b></Table.Cell>\n              <Table.Cell>{blockInfo.parentHash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#State Root</b></Table.Cell>\n              <Table.Cell>{blockInfo.stateRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#Extrinsics Root</b></Table.Cell>\n              <Table.Cell>{blockInfo.extrinsicsRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      )}\n    </Grid.Column>\n  )\n}\n\nexport default function BlockInfo (props) {\n  const { api } = useSubstrate()\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.chain &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.rpc.chain.getBlock &&\n    api.rpc.chain.subscribeNewHeads ? (\n      <Main {...props} />\n    ) : null\n}\n"]},"metadata":{},"sourceType":"module"}