{"ast":null,"code":"import _regeneratorRuntime from\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Grid,Table}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api;var _useState=useState(),_useState2=_slicedToArray(_useState,2),blockInfo=_useState2[0],setBlockInfo=_useState2[1];useEffect(function(){var unsubscribeAll=null;var getInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{api.rpc.chain.subscribeNewHeads(function(header){setBlockInfo(header);});}catch(e){console.error(e);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function getInfo(){return _ref.apply(this,arguments);};}();getInfo();return function(){return unsubscribeAll&&unsubscribeAll();};},[api.derive.chain,api.rpc.chain,blockInfo]);return/*#__PURE__*/React.createElement(Grid.Column,{style:{margin:'1rem 0'}},/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",null,\"Latest Block Information - Polkadot Network \"))),blockInfo&&/*#__PURE__*/React.createElement(Table,{celled:true},/*#__PURE__*/React.createElement(Table.Header,null,/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.HeaderCell,null,\"Block Info\"),/*#__PURE__*/React.createElement(Table.HeaderCell,null,\"Data\"))),/*#__PURE__*/React.createElement(Table.Body,null,/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,/*#__PURE__*/React.createElement(\"b\",null,\"#Block Number\")),/*#__PURE__*/React.createElement(Table.Cell,null,blockInfo.number.toNumber())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,/*#__PURE__*/React.createElement(\"b\",null,\"#Hash\")),/*#__PURE__*/React.createElement(Table.Cell,null,blockInfo.hash.toHuman())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,/*#__PURE__*/React.createElement(\"b\",null,\"#ParentHash\")),/*#__PURE__*/React.createElement(Table.Cell,null,blockInfo.parentHash.toHuman())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,/*#__PURE__*/React.createElement(\"b\",null,\"#State Root\")),/*#__PURE__*/React.createElement(Table.Cell,null,blockInfo.stateRoot.toHuman())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,/*#__PURE__*/React.createElement(\"b\",null,\"#Extrinsics Root\")),/*#__PURE__*/React.createElement(Table.Cell,null,blockInfo.extrinsicsRoot.toHuman())))));}export default function BlockInfo(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.rpc&&api.rpc.system&&api.rpc.chain&&api.derive.chain&&api.derive.chain.bestNumber&&api.rpc.chain.getBlock&&api.rpc.chain.subscribeNewHeads?/*#__PURE__*/React.createElement(Main,props):null;}","map":{"version":3,"sources":["/home/tmaltus/Documents/BlockChainProjects/dotNetworkBlockInfo/src/BlockInfo.js"],"names":["React","useEffect","useState","Grid","Table","useSubstrate","Main","props","api","blockInfo","setBlockInfo","unsubscribeAll","getInfo","rpc","chain","subscribeNewHeads","header","e","console","error","derive","margin","number","toNumber","hash","toHuman","parentHash","stateRoot","extrinsicsRoot","BlockInfo","system","bestNumber","getBlock"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Grid, Table } from 'semantic-ui-react'\n\nimport { useSubstrate } from './substrate-lib'\n\nfunction Main (props) {\n  const { api } = useSubstrate()\n  const [blockInfo, setBlockInfo] = useState()\n\n  useEffect(() => {\n    const unsubscribeAll = null\n    const getInfo = async () => {\n      try {\n        api.rpc.chain.subscribeNewHeads((header) => {\n          setBlockInfo(header)\n        })\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    getInfo()\n    return () => unsubscribeAll && unsubscribeAll()\n  }, [api.derive.chain, api.rpc.chain, blockInfo])\n\n  return (\n    <Grid.Column style={{ margin: '1rem 0' }}>\n      <h1><b><i>Latest Block Information - Polkadot Network </i></b></h1>\n      {blockInfo && (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Block Info</Table.HeaderCell>\n              <Table.HeaderCell>Data</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell><b>#Block Number</b></Table.Cell>\n              <Table.Cell>{blockInfo.number.toNumber()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#Hash</b></Table.Cell>\n              <Table.Cell>{blockInfo.hash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#ParentHash</b></Table.Cell>\n              <Table.Cell>{blockInfo.parentHash.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#State Root</b></Table.Cell>\n              <Table.Cell>{blockInfo.stateRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell><b>#Extrinsics Root</b></Table.Cell>\n              <Table.Cell>{blockInfo.extrinsicsRoot.toHuman()}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      )}\n    </Grid.Column>\n  )\n}\n\nexport default function BlockInfo (props) {\n  const { api } = useSubstrate()\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.chain &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.rpc.chain.getBlock &&\n    api.rpc.chain.subscribeNewHeads ? (\n      <Main {...props} />\n    ) : null\n}\n"]},"metadata":{},"sourceType":"module"}